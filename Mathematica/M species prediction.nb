(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331878,       6077]
NotebookOptionsPosition[    330909,       6052]
NotebookOutlinePosition[    331357,       6070]
CellTagsIndexPosition[    331314,       6067]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
   "This", " ", "file", " ", "estimates", " ", "the", " ", "concentration", 
    " ", "of", " ", "MT", " ", "formation", " ", 
    RowBox[{"(", 
     RowBox[{"and", " ", "other", " ", "intermediates"}], ")"}], " ", "based",
     " ", "on", " ", "the", " ", "ODE", " ", "model"}],
   FontFamily->"Times New Roman",
   FontSize->26,
   FontWeight->"Bold",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontFamily->"Times New Roman",
   FontSize->26,
   FontWeight->"Bold",
   FontColor->RGBColor[0, 0, 1]], "\n"}]], "Input",
 CellChangeTimes->{{3.886801058209595*^9, 3.886801077928686*^9}, {
  3.886801155128249*^9, 
  3.886801170175435*^9}},ExpressionUUID->"a3b672ec-a8b3-40b3-b999-\
1b931a40fd21"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Btype", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<B1\>\"", ",", "\"\<B1a\>\"", ",", "\"\<B1b\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ptype", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<P29-5\>\"", ",", "\"\<P28-5\>\"", ",", "\"\<P27-5\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mtype", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<M1\>\"", ",", "\"\<M2\>\"", ",", "\"\<M3\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPtype", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<P5-6\>\"", ",", "\"\<P5-7\>\"", ",", "\"\<P5-8\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"Ii", "=", "3"}], ",", 
    RowBox[{"Ii", "<=", "3"}], ",", 
    RowBox[{"Ii", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"J", "=", "3"}], ",", 
      RowBox[{"J", "<=", "3"}], ",", 
      RowBox[{"J", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"type", "=", 
        RowBox[{"Btype", "[", 
         RowBox[{"[", "Ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ty", "=", 
        RowBox[{"Mtype", "[", 
         RowBox[{"[", "Ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"proof", "=", 
        RowBox[{"Ptype", "[", 
         RowBox[{"[", "J", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mproof", "=", 
        RowBox[{"MPtype", "[", 
         RowBox[{"[", "J", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tend", "=", "800"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Clear", "[", 
        RowBox[{
        "a", ",", "b", ",", "c", ",", "x", ",", "y", ",", "z", ",", "k1", ",",
          "k2", ",", "k3", ",", "k4", ",", "k5", ",", "k6", ",", "k7", ",", 
         "k8", ",", "k9", ",", "k10", ",", "k11", ",", "t", ",", "C1", ",", 
         "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C3a", ",", 
         "C1a"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", 
        RowBox[{"ParentDirectory", "[", 
         RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Import", " ", "all", " ", "rates"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"k1", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<1. Lock opening and binding\\\\Rates\\\\\>\"", "<>", "type", 
           "<>", "\"\<klock.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k2", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<1. Lock opening and binding\\\\Rates\\\\\>\"", "<>", "type", 
           "<>", "\"\<klock.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k3", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<BT+P rates\\\\\>\"", "<>", "type", "<>", "proof", "<>", 
           "\"\<.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k4", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<BT+P rates\\\\\>\"", "<>", "type", "<>", "proof", "<>", 
           "\"\<.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k5", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<BP+RQ rates\\\\\>\"", "<>", "type", "<>", "proof", "<>", 
           "\"\<.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k6", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<BP+RQ rates\\\\\>\"", "<>", "type", "<>", "proof", "<>", 
           "\"\<.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k7", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<BT+P rates\\\\\>\"", "<>", "type", "<>", "proof", "<>", 
           "\"\<.wl\>\""}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<4. Discard Pathway\\\\Sim\\\\\>\"", "<>", "type", "<>", "proof",
           "<>", "\"\<.wl\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"data2", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<4. Discard Pathway\\\\Data\\\\\>\"", "<>", "type", "<>", 
          "proof", "<>", "\"\<.wl\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"k7", "=", "k7"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k8", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k9", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k10", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k11", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C1", ":", " ", 
          RowBox[{"concentration", " ", "with", " ", "domain", " ", 
           RowBox[{"B", "/", "M"}]}], ":", " ", "ML"}], ",", " ", "MT", ",", 
         " ", "MP", ",", " ", "MPR", ",", " ", 
         RowBox[{"MN", " ", 
          RowBox[{"(", "dimer", ")"}]}], ",", " ", 
         RowBox[{"MNR", 
          RowBox[{"(", 
           RowBox[{"dimer", " ", "with", " ", 
            RowBox[{"reporter", ":", " ", 
             RowBox[{
              RowBox[{"[", "ML", "]"}], "o"}]}]}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C2", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "P"}], 
          ":", " ", "P"}], ",", " ", "MP", ",", " ", "MPR", ",", " ", 
         RowBox[{"PR", ":", 
          RowBox[{"[", "Po", "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C3", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "T"}], 
          ":", " ", "MT"}], ",", " ", 
         RowBox[{"T", ":", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C4", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "R"}], 
          ":", " ", "MNR"}], ",", " ", "RQ", ",", " ", "MPR", ",", " ", 
         RowBox[{"PR", ":", " ", 
          RowBox[{
           RowBox[{"[", "RQ", "]"}], "o"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C5", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "Q"}], 
          ":", " ", "RQ"}], ",", " ", 
         RowBox[{"Q", ":", " ", 
          RowBox[{
           RowBox[{"[", "RQ", "]"}], "o"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C6", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "L"}], 
          ":", " ", "ML"}], ",", " ", 
         RowBox[{"L", ":", " ", 
          RowBox[{
           RowBox[{"[", "ML", "]"}], "o"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"C7", ":", " ", 
          RowBox[{"Concentration", " ", "with", " ", "domain", " ", "N"}], 
          ":", " ", "N"}], ",", " ", "MN", ",", " ", 
         RowBox[{"MNR", ":", " ", 
          RowBox[{
           RowBox[{"[", "N", "]"}], "o"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"x", ":", 
          RowBox[{"[", "MT", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"y", ":", " ", 
           RowBox[{"[", "MP", "]"}]}], ";", " ", 
          RowBox[{"z", ":", " ", 
           RowBox[{"[", "MPR", "]"}]}]}], ",", " ", 
         RowBox[{"a", ":", " ", 
          RowBox[{"[", "PR", "]"}]}], ",", " ", 
         RowBox[{"b", ":", " ", 
          RowBox[{"[", "MN", "]"}]}], ",", " ", 
         RowBox[{"c", ":", " ", 
          RowBox[{"[", "MNR", "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"[", "ML", "]"}], "=", 
                    RowBox[{
                    "C1", "-", "x", "-", "y", "-", "z", "-", "b", "-", 
                    "c"}]}], ";"}], "\[IndentingNewLine]", "[", "T", "]"}], 
                    "=", 
                    RowBox[{"C3", "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
                   "[", "L", "]"}], "=", 
                  RowBox[{
                   RowBox[{"C6", "-", 
                    RowBox[{"[", "ML", "]"}]}], "=", 
                   RowBox[{
                   "C6", "-", "C1", "+", "x", "+", "y", "+", "z", "+", "b", 
                    "+", "c"}]}]}], ";"}], "\[IndentingNewLine]", "[", "P", 
                "]"}], "=", 
               RowBox[{"C2", "-", "y", "-", "z", "-", "a"}]}], ";"}], 
             "\[IndentingNewLine]", "[", "RQ", "]"}], "=", 
            RowBox[{"C4", "-", "a", "-", "c", "-", "z"}]}], ";"}], 
          "\[IndentingNewLine]", "[", "Q", "]"}], "=", 
         RowBox[{
          RowBox[{"C5", "-", 
           RowBox[{"[", "RQ", "]"}]}], "=", 
          RowBox[{
           RowBox[{"C5", "-", "C4", "+", "a", "+", "c", "+", 
            RowBox[{"z", "\[IndentingNewLine]", "[", "N", "]"}]}], "=", 
           RowBox[{"C7", "-", "b", "-", "c"}]}]}]}], "\[IndentingNewLine]", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"concBPRi", "=", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;"}], ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;"}], ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"concT", "=", 
        RowBox[{"{", 
         RowBox[{"6", ",", "4", ",", "2", ",", "1", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"RQo", "=", "20"}], ";", "\[IndentingNewLine]", 
       RowBox[{"data3", "=", 
        RowBox[{"{", 
         RowBox[{"Table", "[", 
          RowBox[{"t", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], "}"}]}], 
       ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Stores", " ", "[", "MPR", "]"}], "+", 
         RowBox[{"[", "PR", "]"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"data4", "=", 
        RowBox[{"{", 
         RowBox[{"Table", "[", 
          RowBox[{"t", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], "}"}]}], 
       ";", 
       RowBox[{"(*", 
        RowBox[{"Stored", " ", "[", "MT", "]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"data5", "=", "data4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"data6", "=", "data4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<=", 
          RowBox[{"Length", "[", "concT", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"C1", "=", 
           RowBox[{"8", "+", 
            RowBox[{"concBPRi", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"C6", "=", "8"}], ";", "\[IndentingNewLine]", 
          RowBox[{"C2", "=", 
           RowBox[{"50", "+", 
            RowBox[{"concBPRi", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"C3", "=", 
           RowBox[{"concT", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"C4", "=", 
           RowBox[{"RQo", "+", 
            RowBox[{"concBPRi", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"C5", "=", "RQo"}], ";", "\[IndentingNewLine]", 
          RowBox[{"C7", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"ODE", " ", "model"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"k1", "*", 
                  RowBox[{"(", 
                   RowBox[{"C1", "-", 
                    RowBox[{"x", "[", "t", "]"}], "-", 
                    RowBox[{"y", "[", "t", "]"}], "-", 
                    RowBox[{"z", "[", "t", "]"}], "-", 
                    RowBox[{"b", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C3", "-", 
                    RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k2", "*", 
                  RowBox[{"x", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C6", "-", "C1", "+", 
                    RowBox[{"x", "[", "t", "]"}], "+", 
                    RowBox[{"y", "[", "t", "]"}], "+", 
                    RowBox[{"z", "[", "t", "]"}], "+", 
                    RowBox[{"b", "[", "t", "]"}], "+", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k3", "*", 
                  RowBox[{"x", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C2", "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"y", "[", "t", "]"}], "-", 
                    RowBox[{"z", "[", "t", "]"}]}], ")"}]}], "+", 
                 RowBox[{"k4", "*", 
                  RowBox[{"y", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C3", "-", 
                    RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k8", "*", 
                  RowBox[{"x", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C7", "-", 
                    RowBox[{"b", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}], "+", 
                 RowBox[{"k9", "*", 
                  RowBox[{"b", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C3", "-", 
                    RowBox[{"x", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"k3", "*", 
                  RowBox[{"x", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C2", "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"y", "[", "t", "]"}], "-", 
                    RowBox[{"z", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k4", "*", 
                  RowBox[{"y", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C3", "-", 
                    RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k5", "*", 
                  RowBox[{"y", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C4", "-", 
                    RowBox[{"z", "[", "t", "]"}], "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}], "+", 
                 RowBox[{"k6", "*", 
                  RowBox[{"z", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C5", "-", "C4", "+", 
                    RowBox[{"z", "[", "t", "]"}], "+", 
                    RowBox[{"a", "[", "t", "]"}], "+", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"z", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"k5", "*", 
                  RowBox[{"y", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C4", "-", 
                    RowBox[{"z", "[", "t", "]"}], "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k6", "*", 
                  RowBox[{"z", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C5", "-", "C4", "+", 
                    RowBox[{"z", "[", "t", "]"}], "+", 
                    RowBox[{"a", "[", "t", "]"}], "+", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "'"}], "[", "t", "]"}], "==", 
                RowBox[{"k7", "*", 
                 RowBox[{"(", 
                  RowBox[{"C2", "-", 
                   RowBox[{"y", "[", "t", "]"}], "-", 
                   RowBox[{"z", "[", "t", "]"}], "-", 
                   RowBox[{"a", "[", "t", "]"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"C4", "-", 
                   RowBox[{"a", "[", "t", "]"}], "-", 
                   RowBox[{"c", "[", "t", "]"}], "-", 
                   RowBox[{"z", "[", "t", "]"}]}], ")"}]}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"k8", "*", 
                  RowBox[{"x", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C7", "-", 
                    RowBox[{"b", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k9", "*", 
                  RowBox[{"b", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C3", "-", 
                    RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k10", "*", 
                  RowBox[{"b", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C4", "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}], "-", 
                    RowBox[{"z", "[", "t", "]"}]}], ")"}]}], "+", 
                 RowBox[{"k11", "*", 
                  RowBox[{"c", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C5", "-", "C4", "+", 
                    RowBox[{"z", "[", "t", "]"}], "+", 
                    RowBox[{"a", "[", "t", "]"}], "+", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"c", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"k10", "*", 
                  RowBox[{"b", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C4", "-", 
                    RowBox[{"a", "[", "t", "]"}], "-", 
                    RowBox[{"c", "[", "t", "]"}], "-", 
                    RowBox[{"z", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{"k11", "*", 
                  RowBox[{"c", "[", "t", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"C5", "-", "C4", "+", 
                    RowBox[{"z", "[", "t", "]"}], "+", 
                    RowBox[{"a", "[", "t", "]"}], "+", 
                    RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}]}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"x", "[", "0", "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{"y", "[", "0", "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{"z", "[", "0", "]"}], "==", 
                RowBox[{"concBPRi", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"a", "[", "0", "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{"b", "[", "0", "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{"c", "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", "z", ",", "a", ",", "b", ",", "c"}],
               "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"data3", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", "[", "t", "]"}], "+", 
                 RowBox[{"z", "[", "t", "]"}]}], ")"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"data4", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "[", "t", "]"}], ")"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"data5", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"y", "[", "t", "]"}], ")"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"data6", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"C1", "-", 
                 RowBox[{"x", "[", "t", "]"}], "-", 
                 RowBox[{"y", "[", "t", "]"}], "-", 
                 RowBox[{"z", "[", "t", "]"}], "-", 
                 RowBox[{"b", "[", "t", "]"}], "-", 
                 RowBox[{"c", "[", "t", "]"}]}], ")"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"s3", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"data3", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "6"}], "]"}], "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MPR+PR:\>\"", "<>", "ty", "<>", "mproof"}], "}"}]}], 
          ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<6nM ML\>\"", ",", "\"\<4nM ML\>\"", ",", "\"\<2nM ML\>\"", 
             ",", "\"\<1nM ML\>\"", ",", "\"\<0nM ML\>\""}], "}"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s4", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"data4", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "6"}], "]"}], "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MT:\>\"", "<>", "ty", "<>", "mproof"}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<6nM ML\>\"", ",", "\"\<4nM ML\>\"", ",", "\"\<2nM ML\>\"", 
             ",", "\"\<1nM ML\>\"", ",", "\"\<0nM ML\>\""}], "}"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s5", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"data5", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "6"}], "]"}], "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<MP:\>\"", "<>", "ty", "<>", "mproof"}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<6nM ML\>\"", ",", "\"\<4nM ML\>\"", ",", "\"\<2nM ML\>\"", 
             ",", "\"\<1nM ML\>\"", ",", "\"\<0nM ML\>\""}], "}"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s6", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"data6", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "6"}], "]"}], "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<ML:\>\"", "<>", "ty", "<>", "mproof"}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<6nM ML\>\"", ",", "\"\<4nM ML\>\"", ",", "\"\<2nM ML\>\"", 
             ",", "\"\<1nM ML\>\"", ",", "\"\<0nM ML\>\""}], "}"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "s3", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "s4", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "s5", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "s6", "]"}], ";"}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "SetDirectory", "[", "\"\<4. Discard pathway\\\\MT prediction\>\"", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"type", "<>", "proof", "<>", "\"\<.xlsx\>\""}], ",", 
         RowBox[{"Transpose", "[", "data4", "]"}]}], "]"}]}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.875123089016462*^9, 3.875123099793171*^9}, {
   3.875123212955061*^9, 3.875123443048339*^9}, {3.8751234733597603`*^9, 
   3.87512352491072*^9}, {3.8751235578348985`*^9, 3.8751236303149104`*^9}, {
   3.875123712095471*^9, 3.875124052477415*^9}, {3.8751241034355965`*^9, 
   3.8751241670223823`*^9}, {3.8751242292698984`*^9, 
   3.8751243068268113`*^9}, {3.8751243446452065`*^9, 3.87512438892916*^9}, {
   3.8751244233510723`*^9, 3.8751245572134933`*^9}, {3.875124647825463*^9, 
   3.8751246485246763`*^9}, {3.875124686365282*^9, 3.87512468701829*^9}, {
   3.8751249266099133`*^9, 3.8751249548031373`*^9}, {3.8751259893827114`*^9, 
   3.875126138610405*^9}, {3.8751261700809803`*^9, 3.8751262878534455`*^9}, {
   3.8751263432171164`*^9, 3.8751263437842226`*^9}, {3.875126379697647*^9, 
   3.875126420155634*^9}, {3.8751269230013742`*^9, 3.8751269275824175`*^9}, {
   3.8751271692501435`*^9, 3.8751273743280177`*^9}, {3.875127417571738*^9, 
   3.8751274758204618`*^9}, {3.875128315952342*^9, 3.8751283207186627`*^9}, {
   3.8751283531205444`*^9, 3.875128359681082*^9}, {3.87512974647933*^9, 
   3.8751297731749163`*^9}, {3.8751318653824635`*^9, 3.875132008327365*^9}, {
   3.878025425249853*^9, 3.8780254301772656`*^9}, {3.878025472756538*^9, 
   3.8780255224969225`*^9}, {3.878025558353265*^9, 3.8780256404993935`*^9}, {
   3.8780256865292635`*^9, 3.8780256953199043`*^9}, {3.8780257271444163`*^9, 
   3.8780257763263283`*^9}, {3.8780262241549454`*^9, 3.878026266370105*^9}, {
   3.878026300609689*^9, 3.8780263210016108`*^9}, {3.8780264196065607`*^9, 
   3.878026500620762*^9}, {3.8780276081053796`*^9, 3.8780276257785892`*^9}, {
   3.8780276733688583`*^9, 3.878027724774665*^9}, {3.8780281989356747`*^9, 
   3.878028207345767*^9}, {3.8787032275320272`*^9, 3.8787033871372566`*^9}, {
   3.8787034184274874`*^9, 3.878703425408596*^9}, {3.8787034690055804`*^9, 
   3.8787035374552026`*^9}, {3.8787038850588703`*^9, 
   3.8787039081571956`*^9}, {3.8787041814006295`*^9, 3.878704181864629*^9}, {
   3.8787042713929453`*^9, 3.8787042900770197`*^9}, {3.8787064533853827`*^9, 
   3.8787064540663853`*^9}, {3.878706545984688*^9, 3.8787065743452744`*^9}, {
   3.8787076606812468`*^9, 3.878707683034564*^9}, {3.8787077238056035`*^9, 
   3.878707724216604*^9}, {3.8787080295775566`*^9, 3.878708096099347*^9}, {
   3.8787081371103725`*^9, 3.878708199346661*^9}, {3.878708230433157*^9, 
   3.8787083247267046`*^9}, {3.878708824443773*^9, 3.8787088262043095`*^9}, {
   3.87870936572721*^9, 3.8787093793241076`*^9}, {3.878709462344621*^9, 
   3.8787094934465876`*^9}, {3.878709585765568*^9, 3.878709600390266*^9}, {
   3.8787096551892896`*^9, 3.878709663897134*^9}, {3.87870976423032*^9, 
   3.878709768547123*^9}, {3.8787098149616237`*^9, 3.87870981628374*^9}, 
   3.878709880641427*^9, {3.8787099295354385`*^9, 3.8787099320601563`*^9}, {
   3.878710073525991*^9, 3.87871008258768*^9}, {3.878721886338291*^9, 
   3.8787219052373753`*^9}, {3.8787220804971113`*^9, 3.878722125854741*^9}, {
   3.8787221784220657`*^9, 3.8787221977050505`*^9}, {3.8787222303138137`*^9, 
   3.878722328166196*^9}, {3.878722672659938*^9, 3.8787226735179443`*^9}, {
   3.8787228005729723`*^9, 3.8787228008069925`*^9}, {3.878722845661831*^9, 
   3.8787228918331985`*^9}, {3.878723166836725*^9, 3.878723178189292*^9}, {
   3.8787232095682917`*^9, 3.878723296739688*^9}, {3.8787233601625013`*^9, 
   3.878723378075742*^9}, {3.8787234776500587`*^9, 3.8787234778089895`*^9}, {
   3.8787240383694406`*^9, 3.878724054225339*^9}, {3.87872455260719*^9, 
   3.878724553658375*^9}, 3.8787246335225244`*^9, {3.878726232680436*^9, 
   3.87872628195475*^9}, {3.878726328499383*^9, 3.878726351106289*^9}, {
   3.8787264529332333`*^9, 3.878726453944233*^9}, {3.8787264928945646`*^9, 
   3.8787265136476507`*^9}, {3.878726702048133*^9, 3.878726871949054*^9}, {
   3.8787270945499563`*^9, 3.878727095296488*^9}, {3.878727137488937*^9, 
   3.878727160572251*^9}, {3.8787275167627172`*^9, 3.878727518335721*^9}, {
   3.878727953164568*^9, 3.878727959659379*^9}, {3.8787282977019615`*^9, 
   3.878728357149963*^9}, {3.8787285562487593`*^9, 3.8787285576388054`*^9}, {
   3.8787285939512315`*^9, 3.878728614371068*^9}, {3.8787288892030215`*^9, 
   3.8787288910547*^9}, {3.878729138904395*^9, 3.8787292014175787`*^9}, {
   3.878729265578127*^9, 3.8787292778884573`*^9}, {3.878729314107326*^9, 
   3.878729315040863*^9}, {3.8787293650249987`*^9, 3.878729393381376*^9}, {
   3.8787294744736757`*^9, 3.878729474904504*^9}, {3.8787302034295993`*^9, 
   3.8787302316970825`*^9}, {3.8787302714270215`*^9, 3.878730302910124*^9}, {
   3.8787307904778214`*^9, 3.878730823523076*^9}, {3.878732281211302*^9, 
   3.8787322822282987`*^9}, {3.8787323895852847`*^9, 
   3.8787323905182743`*^9}, {3.8787325865383244`*^9, 
   3.8787325868412914`*^9}, {3.878732749922619*^9, 3.878732751937671*^9}, {
   3.87873301823433*^9, 3.878733049766852*^9}, {3.878733903710421*^9, 
   3.878733940933528*^9}, {3.878734318012143*^9, 3.8787343301699934`*^9}, {
   3.878754668193686*^9, 3.8787546910461464`*^9}, {3.8787564037699833`*^9, 
   3.8787564360121145`*^9}, {3.8787564786255713`*^9, 3.878756478999556*^9}, {
   3.878756522576624*^9, 3.878756563056856*^9}, {3.8787906073470645`*^9, 
   3.878790645573488*^9}, {3.878790678078108*^9, 3.87879068009137*^9}, {
   3.878791328650258*^9, 3.8787913317262588`*^9}, 3.8787913819557543`*^9, {
   3.8787917994339128`*^9, 3.8787918025218515`*^9}, {3.878794711227789*^9, 
   3.8787947136827917`*^9}, 3.878794845957698*^9, {3.878794942191049*^9, 
   3.8787949430710487`*^9}, {3.878795016692589*^9, 3.878795020201588*^9}, {
   3.8787951104618216`*^9, 3.8787951133363748`*^9}, {3.878795480173693*^9, 
   3.878795483511198*^9}, 3.8787955374923754`*^9, {3.8787955978511252`*^9, 
   3.878795606700057*^9}, {3.8787956546541452`*^9, 3.878795657748802*^9}, {
   3.8787956888028345`*^9, 3.878795729227344*^9}, {3.878795774291155*^9, 
   3.8787957859070168`*^9}, {3.8787976767836227`*^9, 3.878797678065626*^9}, {
   3.8787977531758986`*^9, 3.878797755829132*^9}, {3.8787978207596097`*^9, 
   3.8787978452684507`*^9}, {3.878797927710106*^9, 3.878797955182891*^9}, {
   3.8787980536772985`*^9, 3.8787980548583097`*^9}, {3.8788031685400095`*^9, 
   3.878803168937002*^9}, {3.8788032764978657`*^9, 3.8788032922090406`*^9}, {
   3.878803327488255*^9, 3.8788034694984913`*^9}, 3.8788034998364596`*^9, {
   3.878803540538955*^9, 3.878803569070422*^9}, {3.878803610920307*^9, 
   3.8788036262589145`*^9}, {3.8788038954954786`*^9, 3.878803916043754*^9}, {
   3.8788039460571594`*^9, 3.878803969451496*^9}, 3.8788043425834765`*^9, {
   3.8788046240970383`*^9, 3.8788046257603035`*^9}, {3.8788046626250615`*^9, 
   3.878804663072804*^9}, {3.8788048226263523`*^9, 3.8788048887342377`*^9}, {
   3.8788049366315126`*^9, 3.878804993044676*^9}, {3.878805455948513*^9, 
   3.878805482627026*^9}, {3.878805518159628*^9, 3.8788055354896216`*^9}, {
   3.8788057234565372`*^9, 3.878805733354499*^9}, {3.8788058970720615`*^9, 
   3.8788058984791355`*^9}, {3.8788059455379577`*^9, 3.878805947807296*^9}, {
   3.8788062192549424`*^9, 3.878806223519908*^9}, {3.878806339749508*^9, 
   3.878806342375475*^9}, {3.8788064212216587`*^9, 3.8788064232539682`*^9}, {
   3.8788065278642654`*^9, 3.8788065321634035`*^9}, {3.8788069025565996`*^9, 
   3.8788069030985994`*^9}, {3.878806944339157*^9, 3.8788069553171263`*^9}, 
   3.878806996470356*^9, {3.878807318198781*^9, 3.8788073195837812`*^9}, {
   3.878807574742064*^9, 3.8788075786884527`*^9}, {3.8788076175511346`*^9, 
   3.878807617811099*^9}, {3.8788077522352085`*^9, 3.87880775255121*^9}, {
   3.8788112013319*^9, 3.8788112026598654`*^9}, {3.878811669299144*^9, 
   3.878811669913144*^9}, {3.878811739465705*^9, 3.8788117789291196`*^9}, {
   3.8788118196157656`*^9, 3.878811846653442*^9}, {3.8788123084737635`*^9, 
   3.878812330230734*^9}, {3.878812410656516*^9, 3.878812413087514*^9}, {
   3.8788124625513854`*^9, 3.8788124630203485`*^9}, {3.878812535015562*^9, 
   3.8788125646083636`*^9}, {3.8788126181665106`*^9, 
   3.8788126419515924`*^9}, {3.8794111267637377`*^9, 
   3.8794111288123074`*^9}, {3.879411221425308*^9, 3.879411222508413*^9}, {
   3.879411365268848*^9, 3.8794113656756973`*^9}, {3.8794114407615495`*^9, 
   3.879411440904886*^9}, {3.8794119338879137`*^9, 3.879411935847703*^9}, {
   3.8794134908452077`*^9, 3.879413492815222*^9}, {3.8794135626888666`*^9, 
   3.8794135925021777`*^9}, {3.8794136468840876`*^9, 
   3.8794136470275574`*^9}, {3.8801124851951714`*^9, 
   3.8801124863708467`*^9}, {3.880112545885418*^9, 3.8801125787724786`*^9}, {
   3.8801127221967716`*^9, 3.8801128574312544`*^9}, {3.8801129101364326`*^9, 
   3.880112940415105*^9}, {3.880112971689993*^9, 3.8801129920142097`*^9}, {
   3.880113588626466*^9, 3.880113589795495*^9}, {3.8801136722295847`*^9, 
   3.880113681165615*^9}, {3.885370595300181*^9, 3.885370642684496*^9}, {
   3.8853777089557037`*^9, 3.8853777209634676`*^9}, {3.8853778091022887`*^9, 
   3.885377841586647*^9}, {3.8853779040728397`*^9, 3.8853779608636827`*^9}, {
   3.885378002421623*^9, 3.885378046372654*^9}, {3.885445673626114*^9, 
   3.8854456740207634`*^9}, {3.8854458905340595`*^9, 3.8854459039247446`*^9}, 
   3.8854459775734315`*^9, 3.885459376761297*^9, {3.8854603393789263`*^9, 
   3.8854603426890583`*^9}, {3.885462229149948*^9, 3.8854623036728086`*^9}, {
   3.8854623858707876`*^9, 3.8854623980706434`*^9}, {3.8854624506431293`*^9, 
   3.885462451493883*^9}, {3.885462591946742*^9, 3.8854625965504074`*^9}, {
   3.885462645175084*^9, 3.8854626466859455`*^9}, {3.8854640386241956`*^9, 
   3.8854640629887247`*^9}, {3.885464205239663*^9, 3.885464228814881*^9}, {
   3.885882054199395*^9, 3.8858822034657507`*^9}, {3.885882323402619*^9, 
   3.8858823482625*^9}, {3.8858823870880136`*^9, 3.88588238748598*^9}, {
   3.8864776255413227`*^9, 3.886477693905555*^9}, {3.8864784550116777`*^9, 
   3.8864786603273*^9}, {3.8864795959420214`*^9, 3.88647962057909*^9}, {
   3.8864796566149564`*^9, 3.8864796858632402`*^9}, 3.886479717618287*^9, {
   3.886479812521225*^9, 3.886479813715251*^9}, {3.8864799019124365`*^9, 
   3.886479902593469*^9}, {3.8864800082674274`*^9, 3.886480013856018*^9}, {
   3.8864803461855373`*^9, 3.886480356253971*^9}, {3.886480402776898*^9, 
   3.886480406863907*^9}, {3.8864804646838675`*^9, 3.886480530601099*^9}, {
   3.886480826808239*^9, 3.886480890988804*^9}, 3.8864809668536725`*^9, {
   3.8864811798787684`*^9, 3.886481331638534*^9}, {3.8864813666378684`*^9, 
   3.8864814162816067`*^9}, {3.886481463852918*^9, 3.886481483703559*^9}, {
   3.8864815270241356`*^9, 3.8864815334771075`*^9}, {3.88648195655871*^9, 
   3.886481957988706*^9}, {3.886482076452051*^9, 3.886482115959982*^9}, {
   3.886482148692042*^9, 3.8864821795746326`*^9}, {3.8864846731686225`*^9, 
   3.88648471718104*^9}, {3.8864847579348564`*^9, 3.886484786710743*^9}, {
   3.8864848175195875`*^9, 3.8864848991909437`*^9}, {3.886485081294731*^9, 
   3.886485132090954*^9}, 3.8864851928620415`*^9, {3.886485223022628*^9, 
   3.8864852231656265`*^9}, {3.886485262650569*^9, 3.88648528854167*^9}, {
   3.8864853646846113`*^9, 3.886485447223219*^9}, {3.886485484223879*^9, 
   3.8864855620167084`*^9}, {3.886485595219448*^9, 3.8864856623784585`*^9}, {
   3.886485693909206*^9, 3.8864857053568954`*^9}, {3.886485852753854*^9, 
   3.8864859001279154`*^9}, {3.886485935709058*^9, 3.8864859384628267`*^9}, {
   3.8864859788020525`*^9, 3.886486114297818*^9}, {3.886486145356163*^9, 
   3.8864861461900053`*^9}, {3.886497215912472*^9, 3.88649729628226*^9}, {
   3.8864981834503884`*^9, 3.886498196792426*^9}, {3.8864982389116764`*^9, 
   3.886498244344713*^9}, {3.8864989772314525`*^9, 3.8864990243425817`*^9}, {
   3.8864990674293528`*^9, 3.8864991293645926`*^9}, {3.8864992702458344`*^9, 
   3.8864992851003532`*^9}, {3.8864993374376974`*^9, 3.886499342477697*^9}, {
   3.8865024535002403`*^9, 3.8865024577782273`*^9}, {3.8865027111472173`*^9, 
   3.8865027113532543`*^9}, {3.8865028880809155`*^9, 3.886502899017949*^9}, {
   3.8865029529103765`*^9, 3.886502953497344*^9}, 3.8865030242367167`*^9, {
   3.886503372327339*^9, 3.8865033728873987`*^9}, {3.8865034563333473`*^9, 
   3.886503510965247*^9}, {3.8865035441904273`*^9, 3.886503547702118*^9}, {
   3.8865036042061*^9, 3.886503615333642*^9}, {3.8865037152965455`*^9, 
   3.8865037155255117`*^9}, {3.8865037587016935`*^9, 
   3.8865037589257307`*^9}, {3.886503838147731*^9, 3.886503907722754*^9}, {
   3.8865039492694173`*^9, 3.8865039499334135`*^9}, {3.886504358724538*^9, 
   3.8865043676115055`*^9}, {3.886507652098154*^9, 3.8865076728179827`*^9}, {
   3.8867324128731194`*^9, 3.886732415337407*^9}, {3.8867324783912907`*^9, 
   3.886732524494804*^9}, {3.886732556906209*^9, 3.8867326464762*^9}, {
   3.886732682112988*^9, 3.88673268915947*^9}, {3.8867426409187603`*^9, 
   3.886742648955991*^9}, {3.8867430781165757`*^9, 3.886743103775667*^9}, {
   3.8867889069505053`*^9, 3.8867889265851035`*^9}, {3.8867890119881783`*^9, 
   3.8867890405457745`*^9}, {3.8867918808368444`*^9, 3.886791881006814*^9}, {
   3.886792065093653*^9, 3.8867920768930845`*^9}, {3.8867921661677923`*^9, 
   3.886792183188637*^9}, {3.886792417604457*^9, 3.8867924269453*^9}, {
   3.886792502498385*^9, 3.8867925058533864`*^9}, {3.886792539451474*^9, 
   3.886792611350802*^9}, 3.8867930849393916`*^9, {3.8867933098529687`*^9, 
   3.886793311818036*^9}, {3.8867933725973854`*^9, 3.886793376055041*^9}, {
   3.886793411947975*^9, 3.8867934741763964`*^9}, {3.886793517063765*^9, 
   3.8867936287804565`*^9}, {3.886793667701769*^9, 3.8867937077941475`*^9}, {
   3.8867937538383365`*^9, 3.8867937659343634`*^9}, {3.8867942275927434`*^9, 
   3.886794258121765*^9}, {3.886794373109541*^9, 3.886794542897382*^9}, {
   3.8867989307978816`*^9, 3.886799034453444*^9}, {3.88679909606778*^9, 
   3.8867991501934977`*^9}, {3.886799213323673*^9, 3.8867992489164906`*^9}, {
   3.8867993840430126`*^9, 3.886799607153616*^9}, {3.8867997284495544`*^9, 
   3.886799817544778*^9}, {3.8867998890798426`*^9, 3.8867998925231223`*^9}, {
   3.88680008986018*^9, 3.886800090143168*^9}, {3.8868002516281238`*^9, 
   3.886800265237543*^9}, {3.8868011891159973`*^9, 3.8868011967736807`*^9}, {
   3.8868012341078367`*^9, 3.886801234545873*^9}, {3.886801453217896*^9, 
   3.8868014634884195`*^9}, {3.8868353658469143`*^9, 3.886835426109945*^9}, {
   3.886836164703066*^9, 3.886836221346651*^9}, {3.886836284660101*^9, 
   3.8868362852741275`*^9}, {3.8868363717009974`*^9, 
   3.8868363937613363`*^9}, {3.8868401446284776`*^9, 
   3.8868402271756706`*^9}, {3.8868402890910645`*^9, 3.886840291721032*^9}, 
   3.886840360454935*^9, {3.8868417699169536`*^9, 3.886841819431555*^9}, {
   3.8868418541899548`*^9, 3.8868419004011087`*^9}, {3.887001995095708*^9, 
   3.8870020131238213`*^9}, 3.8870020778961554`*^9, {3.8870026397341166`*^9, 
   3.8870026464636974`*^9}, {3.8870026896716366`*^9, 3.887002691482786*^9}, 
   3.887002749003907*^9, {3.8870028201104684`*^9, 3.887002824868267*^9}, {
   3.8870028552786393`*^9, 3.887002863733575*^9}, {3.887003003696577*^9, 
   3.887003004011535*^9}, {3.8870030442186136`*^9, 3.8870030458875704`*^9}, {
   3.887003129054878*^9, 3.8870031308773994`*^9}, {3.887003170393361*^9, 
   3.887003175615201*^9}, {3.8870032395968895`*^9, 3.8870032410984616`*^9}, {
   3.887003340441823*^9, 3.8870033425037937`*^9}, {3.887003981453472*^9, 
   3.8870040104052763`*^9}, {3.887004050468574*^9, 3.8870040521605053`*^9}, {
   3.8870040861161995`*^9, 3.8870041193381233`*^9}, {3.887004150679503*^9, 
   3.8870041525165334`*^9}, {3.8870049113734465`*^9, 
   3.8870049132124453`*^9}, {3.887009558335105*^9, 3.88700956080375*^9}, {
   3.8870172749660892`*^9, 3.8870173804199486`*^9}, {3.8870174106683226`*^9, 
   3.8870176140907946`*^9}, {3.887018011767685*^9, 3.8870180133486505`*^9}, {
   3.8870180532710238`*^9, 3.887018132847343*^9}, {3.88701838818629*^9, 
   3.8870183897962856`*^9}, {3.8870184698801126`*^9, 
   3.8870184721631136`*^9}, {3.887018590712371*^9, 3.88701860153979*^9}, {
   3.8870186794372625`*^9, 3.887018680936069*^9}, {3.887018766448089*^9, 
   3.8870187682731285`*^9}, {3.8870188203080435`*^9, 
   3.8870188242693815`*^9}, {3.8870188977170305`*^9, 
   3.8870188994620266`*^9}, {3.887018960179738*^9, 3.887018961913143*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"4fc2e6ac-731b-413b-9eae-1badfac266b7"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw113lYzPvfx/EpEdmSLYmSpSIUSZZ4WSLaF1SKad817evUzDRNk60IZUuW
LFlKKERnDkrWkuyiQnVkiUIpuruv3+d9/jnXw9d33vOa518muAfbeclzOJwJ
fTic//////5rXay84Y3N+a8/F7M/QE+05pm77eT+2OvUeKLoN1kZ0yzMwibL
/2IegdpmX7vcgWRVyP4u3ntiNFkdUyQa9eIpZE08Gfr8tsCYrAWNiquqDyzJ
kyDT4Wdt9SZPwe00jY1PRGQdvLA3+lh4hDwVOZNd3miXk/XwRH7ilpmfyTPg
O6Zy0T+jO5j1Yfbi24rbpmQDqFRkKxtGkWdBM33p2y+nybPh18cr+s07siHG
yvr92zS+k3kOsoatXvrFhWyEqofa6TUHyXPh8iLscHw92Rguf36rV2j/Zp6H
iAkx+7N45PnIGvTgaWUJeQF4T5OeWQ/oYl6I8mFtY7scySZo5C7Iu5hHXgTF
1gI97l/yYszLTVBqsO9mBv6pyPLWOM0sAKoD9s342+cPe74EW4Kq9Lw2MAuW
IDr3XM+Cq/R8KQz+FY0KGP2XPV+KetN+j15FMHOW4Y/cDMvoJ/R8Gebvmbdv
mlEPe74ci1oM0+ozmQXLETDyVJXkNz03RfpDlRCFmRz877kpJj9u/T3VjZmz
AuqHfm05l0HPV+DD833yKeX0fCV4PrLMM530fCU6zMvej54ux56boWbQ6If/
cpkFZphsIb/76C56vgp3NVzKiiro+Sr4Ss7P+dFNz1dj54opKk4G8uz5amSq
ml9/7cXMMYdo5JsvsfvouTkaY9/umFFJzy0gUJta+71PH/bcAuOWLZt305iZ
Y4msUZ22+4PouSXWZ0ztE3WEnlthibymp90zem6FyCm7r+oOUmDPrRHdHiDo
BLPAGmeP8FxKI+i5DfLiXmpF5DHDBk/l+1arvaW/b4Pu48oZZ4b3/Z9lNtiz
VPeCthkzxxZz1jSeTI1nhi3EcTcGVBUwC2xRe61+Z8d7et8Wd198HCs3ph97
3w5vM2YeabJghh2Mp7+blydgFtghuChXbeVFZpkd0pQGpl9rovftYX85u9+A
sYrsfXt0xmZ2T7ViFthD7Xz8kAlCZpk9VGPvN/93gZnjgMzd/vbiRnrfAXsu
ao//qtqfve+AJYpfluiaM8scoNrqUWbAZ+asgfZI/XzFfGaswdDPRcPz6uj9
NVCqFc9WVRnA3l8DyajydbbLmDlr8fXu8TsO4cxYCycD7ssJucyCtThbpN5T
/ITeX4vV59uKRvVTYu+vw/mh3QITI2asw46WRfXTvJkF6xBfkRBdv5tZtg7m
xpe+uZbR+45YkFn7K6ed3neEeFKLcd7Egex9Rzj5BsbE2DHLHPHzrJ50iJCZ
4wSNq3KGfvnMcELPdj/L1Fp63wleQ1WKNg0cxN53wu7/zjqNmcfMccbsx4Mm
pXozwxkLPOrkSjOYBc7oO/XMp2IZve+MIdrRTZGf6f31OJAm+vF7zGD2/nrs
K6hTW76CWbAe50ef9rILZZatR1Xih6bJ2cwcF3gl9S8uvUPvu0Ax+dMn9R/0
vguiVxcdh+YQ9r4LwtT5faeaM3NckVa5aPqLCGa4YsqZnaZWOcwCV7TPSI9O
vUvvu+LOs0Ntm9vp/Q3InLOs0W78UPb+Bohn/BTVr2QWbECs239/jEKYZRvg
Oy1gu/0+Zs5GvNmWETj3Jr2/Ecsl8Y8bWuj9jRj2urpnqpIye38jOocHZ5qN
Z+ZwUV583Gb1LGZNLrTNKs31VzCDi5n7LPN+OzFzucjnf992KohZwIWSQH2M
iZA5hwt/18ZNl3bRPS76uWwsVDnJXMfFQOE5xTUldN8N+VsiMuIf0n03BIts
Y1Pr6b4bpv1orItrp/tuWOdw/5O94jB23w2Bjx/cHKbGnOOGmvdnt1zSY5a5
oWTVMv/Fi5nr3LDccYAk35aZ445pku19+3kya7rjSL3N0GWRzHBH5Y+3d7yl
zFx3CNfPdAnZR/fdwS+Z+9n9DN13x91zT48uKKX77njR8eV4VyXdd0dWe9a4
o/V03wN67p9nzGqj+x6oGfBZ7pSCCrvvgQV1sdcVRzFzPfCoMl5qpc0s8IDS
zeepfGPmHA8onw1v3rWKWeaBCcNX3dvlzFzngdZFzY78AGaOJ9Su5hZbxTNr
emLxkCeDB2yj+574c+uO8MxBuu+JT5Zt8+ado/ue0B7g7ZJfSvc9wa9oGDK0
ku574rj11CjHt3TfE27uf65u+Ur3veA2fijnVA/d98K7opSAgqHD2X0vTORb
aB3RYOZ64emepasSZjILvHBe17qv6WLmHC+MaF0R99OKWeaFiy7ulTs3MNd5
oe+AzZPVNjFzvJE/9vjhrXxmTW84lmT7fNxK971x7KjF/tkH6L43QkRNG31P
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
/wOuziC4
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fsF/lvXF/wAVwiMj
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
PmfBa95fDneX4FMh73h/OaocTr1O/8T7y/Fj2JBr+XW8vxwhPWcEXPzB+8uh
77O35Fkj7y/HLZcPlT9/8/5yLJmya0cXTd3/+aEcqxYFGA9tQ66SY+rz8ujJ
7ck1cqz2DE1Y2JlcK0dMdc1kr27kBjle+d48E6VLFiigfeHQL1kfsrYCrcp7
/1rTn6yjgKbzttN5A8l6CgyfcGvywaFkoQJ5FhNTiozIhgpkWoWIS0eRTRTo
M6B51nVT8gQFQrZF3rwzngwFDm707vNoEtlKAY1n7kbPppFtFciaXfenegbZ
WQHp7oPZr2aTRQoIbg1seG1DDlBg1Maqfm8WkMMVGHcntv1rO3K8AnbFsWdf
OJLFCtzUTZz03JWsVmDk9U5pjz3IWQq4njudcdeLnK3AzIedfMr9yHkK3G9a
2fpSEDlfgT8dLkecDiUXKLCvdvq+gkhykQKlKxX/7IollyhgXiZM3phILlPg
u3yz3vJUcoUCb/LTpAlS3l+BZj2nUwFK3l+B/qcOlDiu4P0VmBLRdoNlJu+v
gMWg75NGr+H9Feh3rPlw7w28vxJFHfJ/aG7i/ZWwd5Z1/LCF91fCaI/Bj9vb
eX8lloraFJzYzfsrMa389NTcfby/ErpjL25NO8j7K1v+/Lyz0vMI76/EO83n
/804xvsrIW5sPDXwJO+vxGzNhFCNYt5fiXTvqp/PSnh/JbZ4/+t0+iLvr0SZ
VULmhjLeX4klLoW54Td4fyV2Pnkjta7g/ZX40jPbYsBd3l+JlQvmPvr5gPdX
4tp1uU35E95fiW+VZeu3P+f9lXA6uPl09EveX4lTR9VnZr/l/ZUouN0rp9cH
3l+Jy+uvLHr7mfdXYtIK3bfHvvL+SthMkrnI6nl/JcaNydi3sIn3V2Ji0+EH
ff7w/kqsE4a8eqXR63+uUkI+ekbFwdbkGiWsjx7cHNOOXKuE0GzUnCmdyA1K
WGFGpUZXskCFP54BuNyDrK2CZLDBquV6ZB0VunR/fW6uPllPhXdFEyo7CslC
Fay3Z1+9MYhsqEK4k2xn+jCyiQq5fnGe1iPIE1To4PpNq81oMlTQ6J2Qft6U
bKXCwSuZDUnjybYqlH8/OHfcJLKzCj+XLFR8mkoWqVBc9GH3LgtygAqFl5sP
us4ih6uwzKJhSxdrcrwKya9cYi/MI4tViA/OMY+1JatVqFs9+sUwe3KWCknd
18c+dCJnq3DgwIwfqiXkPBV66B7xGL+UnK+CVWeXwpde5AIV/ltY+G2VH7lI
Be8NE4STg8glKkRs8Zz4OoRcpkKOcO/0zAhyhQqhTyRjx8eQH6qgWB7U82k8
79/y/bx4/FqazPu39B1rv3uYmPdv2Ut3vv11Ge+vwvKBE7+FqHh/NdZ/SJd2
Sef91Vjc9qRmQSbvr0bHDmbRC9fw/mpoZ4Q/+LSe91djpcGLkek5vL8ar11/
RQ/bwvurYV9pWlCax/urMbh/4zO3Xby/GlsqSjXq9/L+arQWa/XOPMD7q7H7
/KghQw7z/mpcNCoaevoo76/GPtvu/W2P8/4tP6+ssMOrk7y/Gm+GdaqNLeb9
1Xj8Z/117fO8vxrjT5RtzbnI+6sR37Fn0PAy3l+NER3eGxdd5/3VeHLu+PtZ
t3h/NbqZv8+7c4f3V8Mt5Zutx33eX43Z2yyaax7x/mq47rPMi3zK+7d8H/kB
aK7i/dUYnW/wn/QV769Gm+MPotrV8P5qjHv2t+2qD7y/GtbGbXO6f+H91bh2
2G3Yxq+8f0t+ZFhh73rev+XXSw5N3dzI+y+H+zv15b6/ef/l6HgiZMFmgR7+
D5kYOJM=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hxnLbEWlZl3LnyPS+D8m2KDQ
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", "\"MPR+PR:M3P5-8\"", "}"}], TraditionalForm], 
     PlotRange -> {{0., 801.}, {0, 8.418988599968786}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"6nM ML\"", "\"4nM ML\"", "\"2nM ML\"", "\"1nM ML\"", "\"0nM ML\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.887018602720584*^9, 3.8870186822620707`*^9, 
  3.8870187696417313`*^9, 3.88701882591938*^9, 3.8870189007454386`*^9, 
  3.8870189632724094`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"da21499c-73aa-4814-b901-1a8980a43d4c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6Jlu8X8A9czC6w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
UWrqEFAZRuaLcevH9TGZq8lyMTRW9ZKHLiani+E/pFzuPoucLca9k4eHuBqT
FWJ8yZrOWTmUXCBG4KCTmRF9yEpx1/XqXu6ujl10/mLknX8dfectWSXGkQ6T
c7oPyJViTFlqZxB6nVwnhmf17lN3zpAbxPjB9XSYn09Wi1H74vPjG9vJTWL8
fFwY6Ckmt4rxaNW/dZ2R5I6ux2vOAM0jvmSWBE68i/0ClpE1JdA1ZzdYzCOz
JZgW3uLa34KsJ8G1vIPBnWPIHAlez0kY3DaQbCTB6QvnrTu7kU0lcN6irOv3
JYfOX4IHEw+Vm78iQ4IgrTcsv3ryQgnGHzifkF9BdpEgtPnrqK+nyR4SJHwN
b3I5SOZKUP44vvLCdnKgBEb33xdNlZB5EmzWzdt5IZocJ0FtPT/QxZ/Ml+Du
bB/9LyvIcgliNo/LzVtATpcgt7Xg+VpLcrYEd/Y6PZo8gayQ4PjQjym9h5IL
JCjaOUT1SYuslMBh7vL0Vz+z6fwleOE07WVjM1nV9fg1zi1of0qulKBslta9
gbXkOgka+LqrbFTkBgnCrgw2iS4iqyX4MnOL3fkD5CYJslp8tvXdTm6V4O+L
WdohEnKHBFWDyw80xJBZUhzclOO0NJCsKYWRfdCvBk8yW4pfDo/zQxzJelJ0
9Dw6S8eGzJHi+dUtZ86bkI2ksHp2oUc0h2wqRWnixJGzBpItpdC6UdvevwcZ
Uqjf7U9tbc+i85fig07WyadvyS5SPPLKj3/wkOwhhZ35lTtPb5O5UijPjSlo
LSMHSmE9/dKH/koyT4qWsdVbrA+Q46Ro6LYxNXI7mS/Ffc9hxSVSslwKUf6v
MZrx5HQpgq4kqNYFk7Ol0H94il/tTVZIMfLwNI+5LuQCKcIzzOdUzCUrpdjz
a8Ukl2nkUimW+pb+886QrJIi1sv385ah5EopztRpn56tQ66Tdn2ezVvy8+9O
On8pZsXuK6loI6ulGB5a8iqrkdwkxbxj06/ENpBbpWheUQjf2+QOKdLanq1d
eYnMkmHz6He63kVkTRk6HPu6Bh8ks2WoMp6kI8ki68lgo+hvc3QTmSND2dOD
dY+SyUYy+I9vujEknGwqg/Hk4uGr15EtZRj48dIVpTsZMngOHH2snyN5oQyz
HL5Uxc4mu8jw3WbJsGYzsocMN3Yv2hQ8jsyV4d0AjX7f9MiBMuQ4bNqV1pfM
k2Fw6x+DSSxynAw7imL3Pviyg85fhlUzdf5seUuWyzCjotbK+TE5XYYjq+45
DaslZ8vwesf3SW3lZIUMhcqXtfVnyQUy3Ho/11h1lKyU4Zfw6tSSveRSGfqU
DnpZuo2skqG48onRNSm5UobyL7f/PE4g13XtH7vF8/cGcoMMQ7ZXm0zwJatl
sF5pEb7Gndwkg72kWkPhSG6VQXZp0433c8gdMojcX5fMmUpmyfHq/NjmvUZk
TTkuXm4M1hxBZssR/Ml6atIAsp4cs289nv6jJ5kjxzZvrVDhj+10/nLk8HQr
B7eQTeUwHWM+vegV2VKO7I5rBe4NZMhh9anPAM1q8kI5am4ZhpRfIbvIMeNf
9jnpWbKHHMX2mY1ux8hcOXz7D/8wSUEOlCNlXWxlvx1knhz3D8nW/9hIjpOD
l8650ZJC5svRPe6L+lMkWS6H2efWwu+B5HQ5Mu1WjNNaTc6W41HZLKvxy8gK
Oc4WlD13XEgukKPBpU0n0YaslKNF42vpaXNyqRwnej+5125IVslx5USFp+0I
cqUctw8WWO8cSK6TQ/xpZNzX3uSGrsd3b3kvr9+ZdP5ycKOPPqtqIzfJMdni
4zf7JnKrHO7Z++1vPSV3yGHh9+zqinoyayOGrDwf2FxJ1twI9xlOE9IuZc75
H4Lks2g=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
S0XMiMINkRlkpOLPCln0XhHZNRXNNW3dbyWQOakw5/nM1Aojc1PhYYABbhwy
PxUta4by9y4lZ6YiW4OX3uJEVqTi+8lbPRfYsv6p2D3yqO7RKax/KoxU1uUP
Nmb9U2Gs2nRYqs/6p8KpwXV4Z1/WPxXDrGd1pqmx/mnYstXWXr2jgPqnQWii
/2b7J7JRGv59dOWZ6QuyWRp6B9uY1twjIw39M3zPh10ju6ZhQ1/zfbrnyJw0
TM5XVF4vI3PTUNY/R1taSOanoXaAwR7HHHJmGqyCtNy0t5IVaci7GTi5UUou
ScP7Yr3Jp5LJyjRcfDFqwQ4uub7r8VdrkpICyI1pkK1YWRXoTW5NQ/SGqere
i8kq6Qhw3u+xdC7rnw7/HW15Hjasfzoilm/8uGoS658OueyEcfgo1j8dZXr/
Lhbpsv7p+KLax1ehxfqnw97i1dKL3Vj/dGw5qzWmpf0Q9U9HsW7sNaNmcmY6
Fmo02Xm9JCvScefDwpSsB+SSdJwcHp/y7AZZmY6Vmg424y+Q69NhrbbjaNop
cmM6TkTOqW84Sm5Nx6x/xu2zySWr8DHPYKz2gV1kTT4s9XSM+m0ia/OhcTOm
RiQk6/Kx3M9HqzOBbMRHY97Mdn442YSPJ++CJT39yWZ8uM0zOZDlSbbmY2D7
aKtJLmTwEZKwfM41e7ITHz9DHyrDbMiufNjdlx8bPJnsycfmgcE9L40mc/jw
3PanPkmfHMzHuL+CTkttMpcPvcWGG3/0IPP4eDTkVeSFX/n0/PMRN+jHoS1f
yHI+ZjywHB/0jpzJh0Xd8bY5T8lZfLhLI9XH3CEr+ECjzzKtq+RCPmIuq7/8
dZZcwod3bfeDrSfIFXzMnjpl18cjZCUfTR7S8k8Kcg0fmg2Xfn/bSa7vOo9R
p9aobiI38OHhN+XDIBG5kY/6JSmSSYnk93yU/W6ycIkkt/JR+vXI15gAckdX
Xtzf0/tXkFUEiBxgJr3lRtYU4IkNf0lPJ7K2APwzpvqOdmRdAXQWBDWstyAb
CdD9L1d+15Rs0uWg7WNGjyCbCZCfYVGUqEO2FmB6Tc6ge1pkCFD1ymCVZXey
kwAjTv5Mz/l5kM5f0HU/tZPX6wvZs+vxvuvnpL4jcwSIP+Tw8PtTcrAA77LN
rWPvkrkC7B93zrvjGpknwLEYz5nC82S+ANe18xv6V5DlArwYbDG+4Bg5U4DV
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
y01NU/cr5Gwx7r7ZaZtUQs4To6fZjxnZZ8iFYmi9MB9wuYhcLIb+yPiq10fJ
JWJkjakV9jpELhNDnNHxvXkeubL9/tdvXeibQ64RQ+n0eFvGTnK9GIm/N5Zd
yiI3imH1oan600ZyixhQPV42Kp3cJkataknWsjSyigRhV5/bbpCTNSUIGd5a
fU1M1pLA9HWJpVoiWUeCv94NTp0ZQ9aT4GSnxweSw8kGkvbnV1U5F4LJJhI8
EB4KU11JNpPgmfqzXrN9yJBg7tJW0WoB71+CJv2AC7eX8f4l2Druyo2BS3n/
Evw9ZW2ez0LevwQb1OYsPDaf9y9BqlNEuYot71+CT03buy+YxfuXIF8xa0jO
DN6/BLLm99+/mPP+JVj+WD/HbjLvX4IJah799o7n/Usw89uWRb/G8v7b+wWl
uDgb8P4l0Mr6Pupffd6/BK2FVae1h/L+JdjyplE7YiDvX4JuyT3G3+/L+5fA
Z7duL/NevH8Jjimbju3qxvuXQD3Qoa+GJu9fgvCk4abCjrx/Cbp8M+//8Hc2
7V+COi3hCevv5DYJckvquhd9JqukYObVr/qjPpA1U1DS/8fnLW/JWikIjHgp
6dpI1knB2m3F5aIGsl4KQuyE5V8fkw1S4Danm1j4gGySgh02ae+b7pHNUpDQ
+622320yUmDp9Vfz8xtkmxRYfJ8f511GdkzB4c12p1/8R3ZOwauvowv8L5AF
7ddfNdyh+TTZPwX7fzzbE15EFqZg4NaM3B9HyTEp6Ge5zEV2iCxKQW+54LTW
AbIyBcq28rIde8npKfhgdD5lbDY5MwVXj3k1nd1Gzk6BaOjTH/ZbyHkpyOq0
/OSzDeTCFKxu/TUoZh25OAU3xE0GPVeTS1LQcMymbr+MXJYC95lnTS3F5MoU
ROnqmD5OINekYHPitgfxMeT6FIzdKRs2KILcmII9J/t2PRvC+0+Bb8e0ze6B
vP8UPD894r8Ofrx/KRT9h6fnefL+pTi38NJPB3fevxQf9s3S/ObC+5cifW7j
0Rwn3r8U6nFv2xwW8P6luBCU/uiXHe9fCoMV2m6HbHj/UhQoTkS5z+L9S3FK
77hRL/D+pTjtZR93xYL3L8Wg1Vc84k15/1IU3rxbP2Ei71+K73vufX4zjvcv
xQqFZnbuGN6/FMs6HH7sOYr3L4XPVo2jesN5/1J8vbekX/1g3r8UqRZ13XcP
4P1LsWnBo81efXn/UmTs3FQ4uhfvX4qfeXNdm7vx/qWY+3VqxglN3r8Un3se
dk3sxPuXIjr2yRFrFd6/FOsiRo4Y3UZ/L1nWfv8d7a166T25Uorwk50/r3hF
rpFi24a1v1WekOulMHQcprvvPrlRil+PBtnZ3SS3SPFkoduaL1fIbVL8MbF/
mHOO/z5TBhurQNPF/5I1Zchx+muXxiGylgy/JvbodX4vWUeGGfmKtOjtZD0Z
Fkm1u0/aSDaQYeQ6o42f0sgmMuzMsB1alEI2kyFf8KogPp4MGSZcTLKYFU62
kWG4OLW8ZyDZUQavVWKnx55kZxnq7evrjriSBTLIWod6SBeS/WUwNzxdt2wu
WSjD22KDhZMtyTEy3Cl6f1bbnCySoceAF7qt48lKGZ5G7hNWG5LTZUjMOV10
bhg5UwbtmMPNuQPI2TLcL+/SJ6MXOU+GtmAXA0lncqEMB6eNMIxQJRfLMKzb
5z4B33bS/mVIK3RqEnwgl8kwSLVy/7LX5EoZ1Kqa57k8JdfIEPvH7J5LLble
hgMuFpbLb5MbZSgrTlrvVU5ukUHz05qLqy6S22TY+vh9ZcwpsoochQvGn1cc
JWvK8c7/oSLrAFlLjvuqirGHd5N15GiaX5t/JYusJ8cjjSjV+vVkAzkETSrG
v1LJJnKMKRw8YbCEbCbHW21hZ8SRIceyym3HfcLINnIYZs8yXreS7ChHl+k9
4k95kp3br9d7+6ZXrmSBHJU3NyTqLCL7y6Frumm83TyyUA4bZ+tCiRU5Rg6N
Zru2MxZkkRzdC2012yaSle12e/p48lhyuhynDp6MixlBzpTjqovwwVldcrYc
pX4xPzv2JefJkWc558n87uRCOcaqpYu3qpGL5bC/0fXZ6187aP9yaP4b8sfi
C7lMDqdHoTXp78iVchivKAtsfwVP+5djg6thseUTcr0c0W/mnt1VTW6U48G4
hqg/t8gtcpyYmffSo4zcJofKTMcupSVkFQVO266vH3eKrKnAw5hh/llHyVoK
uL8p2qWeT9ZRYNp5DXnUHrKeAhE9rg14vZVsoMCvtuMu7hlkEwXubI2fdT+N
bKbAO63qGkcpGQrcPhvY92YC2UaBBNX/2uZHkh0VyI3eIa4MIjsroLHpwmEn
X7JAAadbzUl17mR/BWy2v23xW0oWKpAZKur42YEco8DPy0H/Sm3IIgWMusWq
9Z9JVipQd9b348Ep5HQFyu1+xFlNIGcqsH/8jx11Y8jZCox7OsY1Tp+cp0Df
2/aHB+iSC9sdbZR1pg+5WIEGG9kAQXfevwJTzuqN01Dn/StwY86le4W/t9P+
2/u5j+u5/Cu5RoG0GMPari3kegXi88MnnGskNyrgcz5vQOhTcosCEyvWrR39
gNymQNPdtjX1d8gqSqTfOtVv+3WyphIG5/Yaul4maylxMmvN5YHnyDpKWHrO
eln3L1lPiQrtXWtzDpMNlFh+MORU4H6yiRJfRqb6T84mmymxU3Q+q2MWGUo4
Fz+bd3c92UYJw2tliftWkx2V6HfcalxcCtlZCX3hKLcFCWSBEot/W6kbRZL9
lSh0DTHSCCYLlZgiib/2wpcco8Q/FX8/u7qCLFJiTU/f0HxnslKJ8ZObotIX
kNOVUFu9+0PMXHKmEmsXBdZ7WZGzlbB/OMpywVRyXvv9EXC878y/yYVKrLdu
cZk4jlysxNBzZ7sbjCaXKPGrd5vxUD1ymRJH1osv6Azg/StxVmx2pk9v3r8S
B4x+DtPuyvtX4mf1wY/anXj/SpjfGjW2/69ttH8lGl3sKnS/kNvar7/kR9WI
92SVVBya18fSuJGsmYpbVpHaU59um/F/AAwBw2o=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdzTlsBkcZBuARNH+5BYWLFBuEkIUQWm5zZoAAP/cSrp8rDIEEA4Est7mH
23RbupzS5ZYup3S5pcspXW7pEiEKtM/XfHr06tX77EuvvfDy60IIz74+hP/+
/932XNhf3POAO/wGfIafwT1+I34TfjM+x2/Bb8VvwwN+O34Hfid+F343fg9+
L77A78Pvxx/AH8Qfwh/Gz+G4d8bhI+Q4fJQch4+R4/A8OQ4fJ8fhE+Q4fJIc
hyM5Dp8ix+HT5Dh8hhyHz5Lj8DlyHD5PjsMXyHEY944444rDF+njjCsOL9DH
GVccvkQfZ1xx+DJ9nHHF4Sv0ccYVh6/SxxlXHL5GH2dccTjRxxlXHL5OH2dc
cfgGfZxxxeGb9HHGFYdv0ccZVxy+TR9nXHF4kT7OuOLwHfo444pD2rvHESec
ccEVNxy+yz6OOOGMC6644fAS+zjihDMuuOKGw/fYxxEnnHHBFTccvs8+jjjh
jAuuuOHwMvs44oQzLrjihsMr7OOIE8644IobDj9gH0eccMYFV9xwuGQfR5xw
xgVX3HD4Ifs44oQzLrjihsOP2McRJ5xxwRU3HH7MPo444YwLrrjh8Cr7OOKE
My644obDT9jHESecccEVNxx+yj6OOOGMC6644fAa+zjihDMuuOKGw7R3h3s8
4IhHnPCEM55xwQuueMUNbzj8bO8O93jAEY844QlnPOOCF1zxihvecPj53h3u
8YAjHnHCE854xgUvuOIVN7zh8Iu9O9zjAUc84oQnnPGMC15wxStueMPhl3t3
uMcDjnjECU844xkXvOCKV9zwhsOv9u5wjwcc8YgTnnDGMy54wRWvuOENh1/v
3eEeDzjiESc84YxnXPCCK15xwxsOv9m7wz0ecMQjTnjCGc+44AVXvOKGNxyu
9u5wjwcc8YgTnnDGMy54wRWvuOENh9/u3eEeDzjiESc84YxnXPCCK15xwxsO
v9u7wz0ecMQjTnjCGc+44AVXvOKGNxx+v3eHezzgiEec8IQznnHBC654xQ1v
OPxh7w73eMARjzjhCWc844IXXPGKG95w+OPeHe7xgCMeccITznjGBS+44hU3
vOHwp7073OMBRzzihCec8YwLXnDFK254w+HPe3e4xwOOeMQJTzjjGRe84IpX
3PCGQ977gDt8hnt8jgd8gSM+4hGfcMKXeMJXOONrPOMbXPAtXvAdrvger/gB
N/yIN/yEw1/2PuAOn+Een+MBX+CIj3jEJ5zwJZ7wFc74Gs/4Bhd8ixd8hyu+
xyt+wA0/4g0/4fDXvQ+4w2e4x+d4wBc44iMe8QknfIknfIUzvsYzvsEF3+IF
3+GK7/GKH3DDj3jDTzj8be8D7vAZ7vE5HvAFjviIR3zCCV/iCV/hjK/xjG9w
wbd4wXe44nu84gfc8CPe8BMOf9/7gDt8hnt8jgd8gSM+4hGfcMKXeMJXOONr
POMbXPAtXvAdrvger/gBN/yIN/yEwz/2PuAOn+Een+MBX+CIj3jEJ5zwJZ7w
Fc74Gs/4Bhd8ixd8hyu+xyt+wA0/4g0/4fDPvQ+4w2e4x+d4wBc44iMe8Qkn
fIknfIUzvsYzvsEF3+IF3+GK7/GKH3DDj3jDTzj8a+8D7vAZ7vE5HvAFjviI
R3zCCV/iCV/hjK/xjG9wwbd4wXe44nu84gfc8CPe8BMO13sfcIfPcI/P8YAv
cMRHPOITTvgST/gKZ3yNZ3yDC77FC77DFd/jFT/ghh/xhp9w+Pfeh//7P4j+
i2g=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", "\"MT:M3P5-8\"", "}"}], TraditionalForm], 
     PlotRange -> {{0, 801.}, {0, 0.3488115705146155}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"6nM ML\"", "\"4nM ML\"", "\"2nM ML\"", "\"1nM ML\"", "\"0nM ML\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.887018602720584*^9, 3.8870186822620707`*^9, 
  3.8870187696417313`*^9, 3.88701882591938*^9, 3.8870189007454386`*^9, 
  3.887018963422411*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"0c77f0da-6c59-4a4f-b9f7-a5448825cd15"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVl3c81vsf95USFdFUGkhEKinS9FKSSFaJ7L257M21rytUKu1F46Q9qAil
KWkn2qEkJaOSlrrdj/vz/j0e9/nnPJ7n29vren6fDudo+EQ6+PeVkZHRkJWR
+b9//39/dZjK/P9/Qbtz16wuNQ775/I4UScXOnD2esbKuPx31/n17/cxHo7p
JcdnueUfZayKvsMO/E1bV8h4LKw1LDndyRcZq+Oyedqcod8rGGsi6E6Y+bpX
1xlr4e1Fa3Gfd7cYa+PSgqjNmn/uMJ6MZcPXVkate8BYD7sXVvy3adcjxvqQ
vfS76vzBGsbTcOqPenPdoVrGBpi1a6iGZPdTxjMQq7RE+FT8nLEhJq/I7lrh
+5LxTAy51hxebfCa8SxMnOSblNb2hrERviU+m/fpbj1jY1wZcSrKdHcD49lI
mTdFrO3TyNgEJ1bJ3Nw74S3jOcg9cGns+RriubhgE/VczHvHeB6WhTrnGGk3
MZ6PgK9eU9qvEi9A3s+1d96vfs94IUoLpnmvbCI2xdhd46Qxoc2MgXnL13H4
HxlzgSfef95X+Hxgz80ws6n9eGQNY64ZcsYkv7hv2sKeL4LbTQ1XzUOMuYtw
5KcM/3C/j+z5Yvyq+3l1rwdj7mL4bR/qblFIz82R3rVU/0XfT+y5OUykOyTb
bRjLLEEft6njizfT8yVImqtRG/WEnlsg+5Nt8e+hrey5BSL/7hyXuZyxzFLc
8tloZcun50txxKHgekoRPbdEyt+5xgvf0nNLZOQY2l1T+syeL8Ny47gJxrMZ
c5chKf1o1WU3em6FEeNiiyUZ9NwKGkaH7hbuo+fW+O2w9GNgOT23RnHmyic3
n9Lz5bBu7bLo7KTnyzFNRuWXnEIbe24DxfaZlyaNZ8y1QXzDo4SQGfR8BRRi
GxZ3LKLnK2BWohzw0IGe22JlP/90bW96bot/kRK/ARH03A7nnGrCM5MYww4b
ZRSNbwjoz9vB0VW1pzqbcYUdxrWfWXE2l+7t0W/Gm4zMXXRvD2dF6fyAfLq3
xxGVFlWn/+jeHp7+d+RDjtK9A3ZvGCR/5gTdO/R+/kcJc07TvQNkNprWK5+l
ewd81fphaF5I946oCSg5/IYYjpj/rOxdGzHXEVlJEQ9TiSsc8eiXgVIufT2Z
lahNnrF64Rm6X4nhi4N1RKfofiUed8p7RdHnq1iJvAstzoOO0f0qDH07e4pr
Ad2vwsnHLxYEHaL7Veiaeqh6zn66X4WpgtNra/fSvROamh/fM//f+3PCiIJT
5zO30b0TLCxHPTmxme6dUFZSWlC4ge5XI1Z4dU5+Ft2vRuuTpjEpErpfjb9a
cS+WUM+K1VBqOdfdP4PunfH0402by8l07wz+ksMRcfF074yauncfp0TTvTO4
FtsWvw+nexc0FBxNPhxM9y5YH/TaMdqf7l3g8m3tpmX0/VfhArUXWz5Nd6f7
NVjSb+cRHRe6X4Oum5M+GK6i+zUYWL7jqqM93a9Bt3Dy0mwbunfFjUObp7xe
RveuULtc0cfagu5d4TeP71pD/35U9PJu2csppnTvBmP9luBF8+neDZO9QtJ1
59C9G0qenB9vaEz3bqiROebjPpPu3bEgLkv7uAHduyPX5tCMCdPo3h1LyhZb
X5hC9+7wcr07I06X7j3QuKs8xkWH7j1gUXljg98kuvfALc9t/bZNpHsPdJ3p
u6xTg+490cO9fzxGne494XjlZ8z4CXTviZae9MbOcXTviZkLDxu1jaV7Lyxb
tyZrGLG6F46FCX94q9HX88JZb5VNz8Yw9vICP/CNXzIx1wuC/V0h5sR5XlB1
GrdrNnGFF+pG59c7Etd7QS/LSWMHsYw3Lg0onjuA9tS90Xdyer+9/9v3hmhe
sq07fT4vb3Djj7w3Jx+uNyRHLTaspJ+Ped543eKqkE3+Fd5IOH5R+RO9n3pv
BDsXukZp0r4PXm/4sXu8Fu37YGPQAuEXev/wQW6eZWkr9fHyQcvvJx8H69G+
DxYtXXDBQZ/2ffD9n9HVcupf4YOpVheP2dDP63ofvJrYNaTvLNr3xWvFNZnP
6ftL3RclfVcX1tL3H3wx2rlU4zt9f3r5YsLMzBAT0L4vVp2W19yzmPZ9MXDP
pJcTl9K+L7r0WybfsaJ9X4gSHXZsWUH7fjC/cvhSBv2+UPfDS50U7Uwn2vdD
xQ4Nz6I1tO+HZ/043T0etO+HIkfT1ABf2veDwfuS5M+BtO+HH8tiuZvCaN8P
siWD1VZF0b4/FJZMq5tFP2/U/bFx4wqzGSm074+e12+blnFp3x+tpu8c0kW0
748HKg0j72XSvj82D5ReNsmhfX+MqRc/L99C+/5wL3L47kY/b2UCoPfv4YER
9PtKPQD6puKYZvp9hQDMvtfU9fA47Qdgk3ZOaQ39/uAGwD5g6Or2YtoPQLlC
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmWk0FWrYhpVERWkQzTRqpKQQuSshKYqQik3mcZtn9t72RCVpklLEaR4o
jUpKylBRqSREKSWVBpqUz7e+9/nx9ees67we9772tc5a56yj4Rq41r2vjIyM
hqyMzP/+9f/+dBjL/P8/sL29f2kMz539fQWYxfdcqNISMlbG1PC28HC73YxH
4LLtyYoTT7IZq+GZY9uphfonGI9Fpf7E7iFl+YzVMVrl8p3MqouMJyImsc9p
09HXGE/G0JALhfHlxYynoky/YZfSrhLGmviWrV4S5H6H8Qxcfj3s/LaF5Yxn
Ycbgu+52cvcYz8HisEtJJyoeMNbGYHEsZ/StasZzwa/b55Gj+ojxPDyXulU1
uz1mrAPnLc7L5I7XMJ6Pmj5fDwW9fsJYF0OMj0y9OPwZ4wVYXrGzVKxfy3gh
zG483nzR9jljPfzTrK+e617HWB9X9j5e/sfnBWMDcBz635ziUc94EZpql416
bNfA2BBZR4/d1jZqZGyEY6qlQ8NGvWS8GHKlabcbPhAbI3fjjun2jk2MASeV
7JGqVxnzgCe6T9/ZqDSz9yUI4w1/q+PHmLcEV354NzYU0ftSiLZ5vY1UesXe
l+KD0as/Mx0YyyxDYcy+xnGH6H0Z/Kdyy0Jf0bsJDmQXr7Ob+Jq9m0B/SId3
qxNjmeXwL7nbtTKd3pdj5RjnCUcf0LspPKUOn0b3bWHvpgj7MiqibB5jGTNo
XXK9U8WhdzN0Poq/YbWV3s1RPDHDzuMCvZvjZpfCau16el8B3XI5n3KZN+x9
BcZaPPG1nMRYxgJlEsHrR8vo3QJhawwyw1zpfSVmRvyYbplA7yvRJ0K0wT+D
3i0xJ/9Fy6fz9G6J7A3dV95U0vsqZOx/UOn+it5XwVn97mrBD3pfjZP+L7et
GvSWva/G6sNjxjwfx1jGCh7lxZd1tejdCp0qcqEhxvRuDeNL7w5nr2YMa4yT
H9DxYCP9vDUiFpjYD/BhXGyNJ1884RRO92tgf/OaVx2f7tcgqjhbKXkr3a+B
hUbl3cg9dL8Gaq9sb+Yfovu1UDp1S2x8jO7X4j4nxmRWHt2vha/GtR38S3S/
FsP8PfLNi+jeBpUrMh2Tb9O9DfIGOf5aXUH3NnBvXxZ5sIrubfDR+2wcr4bu
bbF4wgaD7lq6t4Vx0arrag10b4td4yM21zfRvS0WevesWtVC9+uQcUbpYFAr
3a+D7j4jfas2ul8Hbo21yYd2ul+H+uPfr1t8pns7yG9+mhv8he7t0LK97rHn
N7q3w5ooc/GcTrq3w3a+c2VFF93b43AL5xx+0r09+LOt5+/6Rff2KC+0LSv7
Tff2GKE+/lLzH7p3QEn02hWvuuneAaMO6Vy9/5fuHWA4t6jhyD+6d4C7UOrA
7aH79cg9+/XBLJlWdr8el7SPNjQS89bD7fzRamkfxsXrUbk7+fasvoxlHHF6
gf2Te8RwxLQ7X0b7ytK9I3zn7Agc0I/uHXFo4uH448QyG7DbN+SrpRzdb0DP
qsVBncS8DTh1pYib25/uN6Bg8jObDfJ0vxH7Uu74jFGg+40YFTD68xti3kao
P3k64NoAut8IlcKgqoMD6X4TyvWcl28fRPeb8MLU1ClFke43oVSo0nNAie43
IU5j2+/CwXTvBGmdslr7ELp3wqItsYPnDKV7J5TP7UkWDKN7J5hpyk1vG073
zsiJWprgrkL3zig+vWVY50i6d4b29f+c96nRvTMaFU/UrR1N9xyc+SJ8rzGW
sToH2xN2feo/nn4fB/P+aC3uq86Yw0FDTPi0ERPp9/e+T5z+xXAy4ywOVLet
qI2dSnscODz1GlWjybiJA99jus1LZ9K+C+aoTrYrn037LsiYXHbQU5v2XeBa
3dgwTof2XZD/zHFauy7tu2BR/tGtj/Ro3wXP5ttPeLiI9l3w4Kf7h9bFtO+C
fv3ffxm5lPZdMWbMIB2n5bTvilu7ZM9eN6d9V8xLiHXWtaR9V9T9blxQakX7
rki9bT/N34b2XaF/9MPE2fa07wqxV8sIuQ2074rjj0xavjvR/mbURihFdrvS
/ma07xl1aYwn7W+G205X/lpf2t+MgTkWBVmBtL8ZR/7ozO4fSvuboRvHKxdE
0v5mjOKlbB4ZR/ubsTfuZ3Uxn/bdMKy9oJUvpn03tC+5Grd+C+27Qdr5z8ss
lfbdIDNDErtyN+27Yfxyd7F7Bu27oTOTv273Idp3g/Hg0st1ubTvhoJAtQTd
E7TvjjNXHML/O0v77ngYKfGecYH23eFomzLp9lXadwd3mUNgcDHtu8PAqFpV
9w7tuyNCZ3nroHu074676UuPdD2kfXekjHcf1/mM9j0gs8hSRb6R9j2wxm2v
3awW2vcAZ0Licbc22veArOvMJ2c7aN8D441fZyn9oH0P6CT1rYn7S/seKB7W
rCvT7x3b90Cky5FtuwYylvHE7xzVwwZDGav38miOwVdVxvBE/4354wrHM+Z4
4ky34fDdUxjzPKG9V+dVwizGWZ5Y1CxaE6PDuNgTd69d05QY0L4nXA5c08pZ
QvteSP/qPafKnPa98GPu8faB1rTvhYXlNvPs7GnfC6fc+HfznGjfC90TloWN
9qB9L7hvvd1vpz/te0Fj0Vzj0WG07wX/6wUfz8bSvjdmP0x4biOkfW/IO1+5
J7eV9r2RK5ydVrqT9r2xJuL497T9tO8NB7/fRf45tO8N/9CPhetO0r43KgfX
XbQ4T/veCOdHxVoW0r4Prh2/8tyxhPZ90OYm3R9WSfs+sEp9nHLgMe37IHPO
Hl7VC9r3wdLnPxYPbqF9H6wSzd/n0E77Pvhmt8PpzHfa94FvsI3TkL+074vC
vzc8Y+Tes31ffHHNsfiqxBi+cC5NeBYykjHHFwaDnjb2jGfM80Wlof68PdMY
Z/niv5m7chZoMy72hewsZblmPcZNvtAuD52+ewljGT+0LLzweq0F7fuhlLtO
frQN7fvBRW6sV9sG2vfDUZ5fXYkb7fsh/t9onSP+tO+H5/VSsx3htO+HsU/X
fxQm0L4fRiwa95snpX1/BOmdMBHtoH1/WCeMzt2RQfv+SPJU/PxfDu3741Q/
0d+bp2jfHzad4469uUD7/pgVcvOO8g3a98em79vmLSujfX+MiY4tjX1I+wE4
uqrY4Xod7QdgyIQDpf1aaD8AZWFjW9d+pP0AHMix2ne0i/YDICMxudxXpo3t
B8Dr3wB1twGMiwOw8t2ZU5XDGDcFYNykpQb6YxnLBMJm26PcU1MYqwfipE9w
2RQtxghEuL5qYq4eY04grmpZF2guZcwLhNaS84vOraT9QGx3efoT62g/EDuF
VpU1TrQfiK7MgjR/L9rngpu9f86gYMbKXJg5uMWfjqHPw8V5BSVXWxFjbS46
W7MKe1Lo83GxZLGF/9l0xtZc3LPRWb/5MH1eLiq4YpcxpxhzuQhs8Pd6doE+
PxcdzcOt995gnMrFAv/Lvx3LyYeLrjRty4mPGedxMX3buekf68mPi/VPEyIL
3zKu5mLo++fjtnWQLxf1xn17XH4z7uDCZJ1BH4N+H5h/EB7nlAxQGcxYOQgc
6fu/X1UZqwfBJKPt1mMNxtpB+BLUbnhpJmMEQbQi0CZTl7F1EI4+//hZZMyY
E4SPtcq/uSsYc4NQ1bBmvZMNY14QEtq3dK7axDg1COdH5l809mScFYRtnzaJ
dIIY5wWhxLXZYnoM4+IgeExK7lAXMa4Owk7JS+fR2xk3BWG9fYxAZR/jjiAI
du1YOiyH/IMRtDcwWfk0+QcDldomypfIPxip2384Dr1J/sF4c2jk1eGV5B+M
ytkiS9Un5B+MCM3Z/8a8JP9gGCvOKNR4T/7ByOs2DtT8Rv7B4CxUltf+S/7B
aFjkH6gn3878g3Hz3dNdS4YyzgtG31W5bivHMC4ORusxr3vrpjCuDoZ9h/MV
jhbjpmD0m582yk+fcUcwPq1Y9SJiGWOZEGwzE7UnrmKsHIK28A+LUu0Zq4dA
82z85QMujLVDIBzw2vq4L2OE4F6fwm8XwhhbhyC78FbqrQTGnBBM19JSq0pi
zA2B1FY3+sVOxrwQtEwaeLQ1k3FqCFx2v0r5dpT8QzA1+5tGTz75h8DOONh6
4DXyD4HM5eSBKnfIPwQnxZ8woZr8Q+CQmvVGs478Q9D1o6Rtbgv5h4LbFLPU
4BP5h+KC34fGJT/JPxTnbuieM+/7kfmHwrY77sxqRcYIRfLy1lKbkYytQyGx
sGyzV2fMCYXRpPmDN8xgzA1FpLPylE3zGfNCseCJzUSnxYxTQxHtGPRrkznj
rFAsK32RuXEt47xQ7PggJ+u4kXFxKNxyXMfaeTCuDoXlDs8Gay7jplD8mDbZ
wCKacUco+p7ZNm2pkLFMGNRmnsrQS2GsHIaWIxLp7HTG6mEYOl3zrfph8g+D
xZXdx4adIv8wGDjX3u57kfzDsHXiT60vN8g/DFd7+rxsKCf/MORu5d0pe0z+
YYi/X1+X30D+vfczNIbvayX/MGTIbPOI/0L+Yejhzah0+UP+YVieOmnhMrlP
zD8M73ILsyYOYdwUhhpo/+tRY9wRhu5DM01fTGQsEw4N37uBBbMYK4fDc4ZC
8JYFjNXD8eijvAkHjLXD0ZLfWT/PgjHCkZCuPV/WlrF1OPRdZix5uIkxJxwB
yfhzwJMxNxx3Rpo7egQx5oVj5LR5drNjGKeG4xmn9O0XIeOscJRvWdSvIIVx
XjjO2L44EpLOuDgckz9V3NE+TP7hqC04sPHDSfIPR3+N15ycC+QfjvePVe85
3CD/CBiUTt47qJz8I7Dt6rerhY/IPwI62bba3vXkH4Hz+aKO4W/JPwJeR25/
L/xM/hHY9UF3gcsv8o/Af7KeZ2RlPzP/CFSfbbHLUWTMi0B5/djpGMk4NQJx
KhHj6yYwzoqA5q1u7aDpjPMiYOne7Cinw7g4AgF8hz17DBlXR0B53+6GyaaM
myJQMOfejDwrxh0ReHlbK1JvPWOZSAxr/Hbjuitj5Ug87F7ZbezHWD0SKXs9
pt0IY6wdiSuhDxYtSmCMSLjVnJxfIGVsHYmKQdpKM9IYcyIxg7u1+MB+8o/E
TbuvKxT/I/9I3B+xMzfyDPlHYkvPocrmS+QfCX0/i6tmN8k/EiPySnxPVJB/
JHzc5V8MqCH/SNwVe8t6NJB/JJbJFTUVvSX/SIyZ+DxgRAf5RyF5/PbjHr/I
PwpvxznecezD/j+IehS2bxqcLNOfsXYUGgIeZOYOZIwoBAYLe0yHMLaOgsLp
8adbhzPmROGb5adcsRpjbhQCFDe+mTSOMS8K+cuz/W5oME6Nwr2kAr31Uxln
ReHiz0NmX2YwzotCHO/EXokW4+IoNO+bMm3sfMbVUdjU7fv9jB7jpt77sD9/
jY0Yd0Qh09dqadUS+v880XhlVXJjoylj5WgM8LgW+s6C/KNRm1TkHGxF/tGQ
LbFK+G1D/tGQnv38kOdA/tHgPze1k9tE/tHY1/f3QKkL+UfD5eHRTwoe5B8N
DyV5GakP+UejpLbMSC6Q/KNxI/nQEV4I+Uej70MH/d8R5B+NuNrL34NiyT8a
i6clPWvlkX80tFPymjaIyD8alSsVhjxIIv8YvBEGuixOIf8YLH7Y9PRUGvnH
9P7zvCJg1F7y733HwanC/eQfg1fX2v61HyL/GNzT0+6yySX/GCTHhQ26coz8
YxAkqTMae5r8Y5BpHLI1Lp/8Y/DX16qr/gL5x+DpkpRog6vkH4Oabn+1PUXk
HwM9wzlVn2+RfwxMDw0+aHaX/Hs/b+lqYWYl+cfAddUc/pcq8o9F59P2nctq
yD8WC/tUFO6sJf9YjM7u97O5nvxjMSS21WxOM/nHgn//7YnIN+QfC4XVseo3
35N/LAwuahyT/0T+scgrsl5i+ZX8YyGjnvghpYv8Y3Erbd6Rqt/kH4utVbXc
wT3kH4uBDp8tVsp+Yf6xUNJp0hHLM66ORcbT+TNvDGLcFIs9Q7Zodw1h3BGL
dyd4y2aOYCwTh/Cw85ud1Bgrx2Ga4c3U7WMZq8fhZaVZRZE6Y+04iL+0DGmf
zBhx6BO9wEV1OmPrOIxua7iO2Yw5cSjdnj7Fay5jbhxylminb9NlzItD/JsA
lXx9xqlxmOgyPvOREeOsODhmKGh9XcI4Lw4d4T8qhpiSfxzy6gu4My3IPw7u
+QPVl68m/zho3blVu3Et+cfBsOdCRrAd+cdDf1aNu9iR/OPx4sBgg3Qn8o/H
8yw71WOu5B+P95LMvxc8yD8et7Jr2m/6kH88Ri/+2FIZQP7xOHaq9s3jYPKP
x+KZ0s/Pw8m/9175Q5/GaPKPx6uTHWOb4sk/HiPnJKFJQP7xWFBy1a9RTP7x
uM3Znl2XTP7x6JQZ8LImhfzj0RFgNOV+GvnHw/WkRWjJHvJPgEK3yb1LGeSf
ALlis9knDpJ/ArZWh+zNOEz+CVA0eDMw6Qj5J6Br7nVJ2AnyT0DZhkmDOWfI
PwEncw0Omp8j/97fz5mpp3WR/BPglzC9fvhV8k+AXbdLctd18k/ApP5yy57d
JP8EfJK16n+xlPwTMNM+vCatnPwT4HXu3Gn/++SfAOdxZmmmD8k/AerGwYJx
T8ifh8k9IfFfaxkr8OD44JC4tJ6+Dx78khfv39PEWI2H6Yt2X3Nvoe+Hhw3v
3rXNe8dYk4dH++Kn/vtA3xcPDvb7A+9+ZqzHw+GLe+6kfKPvj4e6XW9m2v5g
bM7DZXHjIdU/9H3y8LPn6cTn/xg78GAbOvlCet+v7PvlQWQ/1t6uP2MvHoYX
jRgwbCBjLg+fk0SVlUqMI3t/H+fVwcShjHk8aFpsT9RXYSzlIdqyI+qjGuNU
Ht4HeAsOjWWczkPAZadMK3XGWb2fZ4tB5d9JjI/xMCtJqnhiGuM8HnL2FLnY
zmR8mdf737OrKrvnMC7mIbng6IqceYzLeJDTMmowW8C4mgf9bQniNn3GtTyY
Nrcs32LEuKnXJ/zbmBlLGL/jQemozoC7Jow7eHAumT3Y1ZzxTx7ujPOZ+Wcl
Yxk+JigEuaRZMVbgY0lNRd40G8bKfCjU9IwqtGOsxsfq9emZlo6M1flovzDW
sH4TY00+Svsod3m7MNbmI/tKd2WnG2M9PmxSYosSvBiDjzqb6Q/k/Rib86Hb
eODPtkDG1ny49wkyGxbC2IEPrx3G53aFU38+jFwPG6pEU38+3pjptO6Mo/58
OI3cek6ZT/1776sMD20RUn8+Tug8Ot1PSv35aDjX1hizhfrzMf7nZJ0vKdSf
D9GZCSfd0qg/H1r8KLOnu6k/HwvGPFQw3Uf9+SiYVvr5/AHq3/v9rPnePSGL
+vMhMPmrnZxD/fkwvZ249esR6s9H8hw95fUnqD8fKuPKr10/Tf35WD7iTZp6
PvXnIyzdYCe/gPrzITsnsqjpEvXnw2K9pcriQuovwJGD7un7iqi/AGGCYPNv
N6m/AMOSNKauLKX+ArzjTZmXXUb9BRh5brF/ZyX1F8Ds1uxasyrq3/tuej4k
/RH1F2Dso+1ofUL9Bfj+O9F4/nPqL8CCddZBCfXUX4D4sAtPy15SfwHcOkK4
yq+pvwBCR0tju7fUXwDBx2fLMt5TfwFeK/nG17dTfwFKlyR+HttB/QXYf+Pt
3g3fqL8APMF/keld1F+AlFH70h7/ov4CdJjueKv4l/oLIKlwCDOR+cb6CyDf
WGQcLcs4TwDDAZGmZ/ozvizAzkCd5KYBjIsF0EovGDRUiXGZAJHKdveMlRlX
C2B7JOqe33DGtQJMrp2tmD6ScZMAVWUDt90cxfidAC5BFVbvxzLuECDDK8x2
iDrjnwLMyNx+QGcSY5lEpJ5u07SbylghEeWFkl/h0xkrJ8Lq18/Be2YxVkuE
V39zn/NajNUTYfJ9k2LVPMaaiRheM6nrnS5j7UTIXRJo9tFnrJcIizObc1UN
GaP35yvP+swyZmyeiO3jrWONlzK2TkTClBl11ssZOySCl31fyDFnzEnEuqA3
sQErGXslQl9jUUn0asbcRHgapTuI1jCOTMSYtXeMUmwZ83r3PqSE7LZnLE1E
z+7C3xmOjFMT4Z07rebgJsbpiZgfd10mm8M4KxHv+67lZ2+m/omQbb5il+VB
/Xt/361yfqY39U+Eg62d7D4/6p+IJMyvTwuk/r3f/zBdpS3B1D8RndfG7OWH
Uf9E/Ey7EB0eSf0TsbLu4WXvGOrf+3lrjdduiKf+iah89MBsJZ/6J+LD4NUZ
+kLqL8QmbLOYKqH+Qgxy810/NJn6C+HUWnL391bqL0RSo++eV9upvxDXNund
KUuj/kLMiPpnf3o39RdCdvlOy9R06i9E1JPK3KD91F8Iq6NilzUHqb8Qx+6f
TdTKpv5CFJhqKirmUn8hnlRX/3l7hPoLsXlulE3xceovxJfpr4enn6L+Qkx5
3WgUcJb6C2G9w/DR0nPUXwiN31UPVS5QfyHs5wcYtV6i/kIMXN6mcukq9RfC
lKO6UXSd+gsR+e+x8tpi6i9EY0TP/HEl1F+IlqTQ8rel1F8IswlqVWfKqL8Q
FcdczcIqqb8QMUVF8wweUH8hmnSW7fhbTf2FGOp42u3GY+ovRM6Y46cTnlJ/
Ie7FW/ktfk79hVCJdjv85wX1F2LNw+3Wlxqpvwhf5zwPD2qm/iKU35UbOaOF
+ovQPnWqVvNb6i/Cq+tzS/a8p/4izP034bFFO/UXgbP+nfPfT9RfhE4IfM58
of4iRE59823Td+ovQmCMwt9BP6i/CM75r8WXf1F/EXSme6Zt7qb+ImQOVVVX
6qH+IsTdPKp9oc931l/U++/Hn25v6MeYK8Kg3KIGGXnGkSJ89vsUkzuAMU+E
gulrs0wVGUtFCPuvaGXrYMapIqw6qZAgHso4XYSdrSMWTR7BOEuEmkn3ecUj
GR8TIcdGac2GUYzzROD65J/6PobxZRFObdi9a+t4xsUilI3ePWCSBuOyXt/9
WxUvT2Jc3ft9VtsfXDmVca0Iv95U3GjQZNwkgujHf0EBMxm/E+HlicKCv7MZ
d4jQgaakLdqMf4pw+HfrF1UdxjJiNKgd/XhYl7GCGFvrv8TN0mOsLMYe8YGc
AgPGamJYBcc4LzJirC7GMg23c8XGjDXF6IyZmWmylLG2GCL1I+p3TRjriTH0
9DEjczPGEOPKDfnOuysYm4uR0bXXzNSSsbUYNZ9nLyhZzdhBjHargzcXr2HM
EaP8V0XbZRvqL0aVZca5uXbUv3d/f9uo4w7UX4wgvQyNCRuovxg9vxMqdm6i
/mIkqLmqyHOovxgPe4bJRrlSfzHuv3Df9d6N+otx+cqsCgdP6i/GswLt/+54
U38xbA8vnqrjR/3FuP1g8uqDAdRfjJxD+eMUgqi/GN2KV3dzQ6h/788HDr/0
LIz6i3F0earAKJL6i2GtKPsrO5r6i6HvuH+MXBz1F2Osz/oPHgnUXwyFZUu8
7vKpvwTFt613ThVSfwkyFd/6C8XUX4JF5rI/m6TUX4IPLlXzDLdQfwmCj/Mn
7NlG/SW44je66NN26i9Bu4naENM06i9Bsrlw+IFd1F+CMgezex17qL8ETXYW
Bib7qL8E8pPDnfbsp/4ShGWf12/NpP4ScPI+3FuQRf0l6DNPfpToMPWXIEX+
8/hHudRfgsXDtr4cd5T6S7BC5+4Gr+PUX4LhU9fsyj9J/SWYK0pJ+nWa+kvw
tK+ZIfKovwRdJ5afFp2j/hIIk9Y1lBdQfwlCTyy5r3iJ+ktwddSTuNVXqL8E
Fq/rPqcUUn8JVIePn/zgOvWXYOQF7zGKxdS/t8cT6VPzW9S/9+e32tkJb1N/
CTSCBx0oukP9JfjbWnzsRxn1l2Cok0WcViX1l8Is8OEoj/vUX4qXex/H76+i
/lLsrP93quoh9ZfCMUH3v7411F+Kgx8XeM1/Sv2lODf7eZdbLfWXIlLnz5pd
ddRfiiin2Ohb9dRfCr7OmaDPjdRfCpeBbxeOaab+UhQ8X3R/+WvqL0Wz/0qd
wDfUv/fznz7us7eV+kvhER4YUvSe+kvx0dDIquUD9ZfiFe/oP4VP1F+KNWsu
8Gd1UH8pDL+Ner76K/WX4vzCajnud+ovxaag6wqpXdS/9/v6eufVmZ/UX4qm
wY923ftN/aWQV7s94X039ZfiN0cg7NdD/aVwNvxaMr5PJ+vf+/OlTxoXyjKu
luKpquSJlRzj2t7vu/LaMQ95xk1SXNFcuD52AON3UggjLramDmLcIcV6mT+2
uUqMf0qRNqg0++IQxjJJSG6ueXB3KGOFJByoaKt/NrzT+H8AoCiD4g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
o9M02XJoHst3x2Yr5Tj1ApbvjgqX/V83nmf5HlhnycvKuMLyPaDafdvj4w2W
7wGXnKlLre6xfA/sqJssV/uY5XtgxOh/z1m3snwPXPvbSKPzI8v3gMeZn6YH
frB8D4y/wZN3kHlK+Z741VC2VnMoWdUTMuoHPyqOJsMT2yNXvuRMITt54pPk
wdBBGmS+JxL/SuSOX0DO8cTg5+f3YBm5zBMr9ry8FraW3OKJqepppVctWL4X
7gmN3FQcWL4XeGkxuQJ3lu+FWftqbH/xWL4XFn6q2iaOYvle6OD3lU+RsHwv
vOe36deksHwvlE78elmUyfK9cGFr1mzzIyzfGx4W/3lqnGb53nDfZ2I7spTl
e2PCr81PFW6wfG90zH3wePR9lu8N088ZC+Y+ZfneyOpNr7F5y/K9YTz8ijCp
i+V7w/lu4/L7fSzfBwYRsi9myD+jfB+8q9BZv2M0GT54+yjD9bcq2ckH9947
yMdokvk+0JmR/7eCHjnHB7kX8lPzV5HLfFBQs32JjTm5xQd1Z2b2DbMnc7Zh
eZjr1YfuLH8bbpYudS4IZPnb0GrWdH1XLMvf1v//D7t6/g6Wvw1ZkndecXtY
/jZMu3bMNzGX5W/DkMjL5YdOsfxt2F6uu662hOX7YlKMVVvfdZbviwGcqrgV
9SzfF0GFht+TnrN8Xxz+umNu23uW74v72lwFs26W7wvte+uDygc+p3xf9C5c
vNZAmdzii8q+Zp/bk8gcP2hHn6pym0VW9cPD19GL5XXJ8MN/pWMLSlaRnfxQ
JDCTDeOS+X74cL5TdYUjOccPJo9vfxjhzfL94GF23vhLKMv3w+fJoVOexrN8
fwxzzOXWp7B8f6ycrlrZcIDl+0Mx7cGWF8dZvj+6qo4N6Sli+f4Ia4w7OqGK
5ftj/GtMWXef5fc/b3h/g+A5y++f7/uyoPIDy+ehUbklU/knWYmH2lzVknMD
Wuh9eLhZb3zfTZ6sxUOvtpr8RGUyeLBInGTTOJbM5UG/uP7I3slkJx7KrVu+
OEwn83jYfqlRc6Ymmc/DhTGORt+1ySk8tFaYLK5ZTM7hwcZkf1cuyIU8PL9j
6sNfSy7jIasxKM3FjFzHA76qua6zIbfw4FAXV6vjQO7k4faCt+XTXMmcAOxI
SV8yzpusFIDZNk80RgSw/gFQN9wgGh7O+gfgZmHScuU41j8AG/N/rx8rYf0D
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
sftvh3ppakm6bOeK/wEjbX/D
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
LLc8oG7jTlZdi0LnK5OOLn9h838KLijK
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV03VY04v7PvDZ2FMRsXA2IgpYBwO9MRDFmEqJgqNBanTDG8bCRixU1Okx
UAxs9BizAwMbezai6FQ8WEe//K7PvT9++4frdT17dr/v93PR1S9qemBdkUjU
tZ5I9P/+/u9jGCX6/z8Y8EG7IbLx3yP/RxM0rz/32dAjp2kxVs8ZaeV18TZt
Cufxy7bmD3tOm+O59Y7Yq93e053Q7KmdY+e61bQEBfUDizo8/0F3g22/nwkZ
M+rwOXogoLGD9t7mBnQv/C51kLjJmtCWaLrH/eb6rJa0Fcqr666TZ7emrSHp
sqqwOqYt3R+/vhW1jsw1p22xIjg5vM/9jrQdfu9fs36iSxd6AHq+HvsjK6Yr
PRDWd8eLgqd3pwehxZhGm9eM7UkPxrt7/Xv6O/emh6BFcNacht596L+w+MSA
fWez+tL2sNreouN/B/vRQ/H0L/Hp9t9t6GG467A6eHRPO3o4Tj4Z53jLdQA9
AlHzp1/4PH8g7YAeqQblnAuD6JE4tXlJyv3GQ+hR6PNzwybJ9L9ooHT0wj5f
N9j/zwLgevWdrvOXoZw7wuPYh/pBLsM5d8SlJ1abVheO4Hw06t2f4ZjTZCTn
o/F09sO6n+WjOB8DX8cGtx5EgPMxCPn5usn0no6cj8WKAfMsLj2hhbHInmk9
yGrNaM7H4WbGzXs+HmM4H4ePvgd2u5mN5dwJX9aNGPn7Li04oebqnabOq8dx
Ph7miyoLunk7cT4eUQmvEtK7jefcGeY97bo4v6UFZ/QbZN8xZq8z5xPQrc6I
x+9TJnA+AVWVp/ftHDeR84noHD+x+ZZWLpxPxOHs1d6XntAiF5z5N8G0+a5J
nLvA6cD2Tf5pkzmfBKf135J0k6ZwPgmXV1mZtLOYyvlkHJw61n+WgRYm48Ga
Q8PO+Eo5n4KtAb3sLpbSwhTcq9QH2w+ZxvlU1Fl2Z2/LjbQwFcdPf3k2odl0
zqXQPrUqfZ5IQ4rRU+fi7gtakGKzxUFTiXTG/6yTwqyq/v5jx2jRNJw4kzNj
ex9X7k+DmUdqsxcraWEa1syyqQ6q78b9aTijfCMZEEOLpqPp/MpCRz2N6ajq
lLkpb4o796fj5ed33bsdp3XTkdyp6ayqvh7cn4E5jRp1+LyGxgzYCiYj+zfx
5P4MvB3iVrAhmdbNgPrhgCZj39IiV5hYvJndfuZM7rsidPfh0M6XaMEVhSMq
G0wZ6sV9V3i6ZzXavp0WueGv6zbHrTvM4r4bkucMv3dvPi244dOrv14X/qR1
boh3PJKyPnw2991xTzqj5+HHNNzx4fPqhE9TvLnvjoUNu/5x0dE6d6jmpk09
Z+fDfQ+4vgn7MetvGh747R91pUXbOdz3QPeRZy4+UtE6D3RYl1J99hst8kRn
V1cr/8Ey7nsifIxtTVQkLXjCstjLX7ON1nniRz/vT0V6WjQTS6Snuj9o78v9
mcgrEqe3nkELMzHgXWaq60JaNxP+EXOObjhHi7yQsLhvxZffxn0vLDos2y+1
9+O+Fy5NS718MJrWeWHi+ZqH3Ypo0SwMyJi+ctVLGrOw6XmjwjYW/tyfhaOz
l59c6UHrZiHl5fJ5kqW0aDbe3rHZVnyZxmy0Lyl64FQ/gPuzcffUog/PHWjd
bLzvM2tXTiIt8oZl79XP+u6l4Q03wxW38krjvjdwLPX2vB6B3PfGgVNWlvCh
RT5I/2tOx5+raPhg5y9VzNEbtOADE/XSj+lNg7jvg8/eXSLGjaNFc5D8s/UF
cSaNOSi6P+X+0xJamINVMQcz93027s/BZPRZqbEO5r4M948t/OYbREtkmOR3
OnukloYMv6I2iS0e0DIZ+m8KTxCZhvD3ZQj/uSPv1WRaK8P6eNfJV9W0ToYd
TWSLD5+i9TIkHDjrsPknLfLF2/DkMcsGhzK/1v3i1TlRNHzh/Wn3p8TttMwX
ffd2nhvxghZ8Eeh0uTyg81zm+6LqXB9LHw9a54v8AbvHzVxK631hfvabhXsp
LfKDxb4dG10bhDHfD7MHBf7jOoqGH7KzL810T6ZlfhhzO2nuzP204Aepr+lD
7ypa64dZvg6r/XuHM98Pps1W5M31pfV+aPvp5IGYtbTIH+1WTfuVeoeW+GO9
t2ewqmUE8/3x/HiXiqUTaJk/Oth9ka9X0II/Mm0tqouO01p/TBz83v9oDa3z
x96Swn2X7CKZ74+PAzfcvB9GiwIwVNLxUOUWWhKAy/8GT/31lEYAym1v5Lbo
EMX8gNr/n6zYrq60EIBRyt/1By+mtQHYNMRn1ISLtC4A7uOnNbepI2d+APYv
Dbow1IIWBSL83MdLY4fTkkAod1WJpZ40AlG/rW/+rHhaFoh35yfODs6jhUBg
cZFn7B5aG4hGQ3LmZV6hdYGwDGn7bsFbY34gRmujMvMbRjM/CKfyRjpt6U5L
gqA2+TJiH2gEIeHyf7KT3rQsCDEbr++5kkILQZjtfr/Xg1W0Ngjm+xaceXOA
1gVBk+6h+HqD1gchN2uXf72PxvxgiNW/fVs1i2F+MKrc/0nt0odGMLoWXdvZ
z4mWBePKj4xPw/1pIRjtO52YMFGgtcFo1HLhQc91tC4Yq25VDAo+SuuDcSH0
9oX4e7QoBGtuTInMqTbmh6B5U0/LZa1imR+CbmaGrxv707IQlH82u1fsQgsh
sNl4pfRkCK0NgWXXVrevKWldCE7HvPz4eBOtD8HvFU5dqk7SolBIv+2f/esR
LQnFw9SFG5r+MOaHIvDhwTcd2sUxPxTvzWwHWw2ihVDE9v+pHjqN1oaipms7
vXMkrQtFyieFg+cCWh+KnwWO2uBCWjQXqT2kJonnaMlcfFfviVc9pzEXCRfm
VKz4Y8yfC8NzmWxLp3jmz0Xog32PDwyltXPxbJeb7Kw7rZuLSQvmvbwVS+vn
YrHPn4AXubQoDFbOu5593kVLwtDNeZlX3VIaYYj32Xu9VQUtC0P3BY0cuzZI
YH4YrK+t2G3bjdaGYUnv2eYYRevCMGWVV8bU2bQ+DMGdl+p9kmlROB4d+TMy
ciUtCUdR+NbV6ftphOPuYKVhYRktC8estgVjCqqM+eF4o3RZWtQkkfnhaG4j
3Dvam9aFI7WzvdnlsbQ+HHbTYiff96VFEbC5bJdekUFLIpCgid1Ss5ZGBOov
tD/f8Agti8DD28LTtndpIQI//CZ96vHFmB8B3yFrfw4UJzE/AuKpEb9H96P1
EWi06/T3aRNpUSTGS9dWyYJpSSSu2dfcj8qhEYn1QXdPZGykZZH4+XDS2kUn
aCES7xwdIwse0tpIQLz/r6Jvxvza7zttqjnSNpn5kej0usXuiwNoURQ2VX3z
ujeVlkRhkbfs96twGlF4MnhcfvU8WhaF5QnbLOtto4UoFHdR72l1ltZGYYDd
S2vJM1oXhfZFJ7T9fxvzoxC4yKypQ8cU5svRrvxdmIs9LZbDZsHIMzPdaIkc
fnMFcUgMbSvHm4I2MxKW0JBjX6Nv83N20lI5zuzoV5J3iZbJ0UF14IH2NS2X
4/DqhZ9310vl88ux5tXBP8ckdG7tfqht3VIHWiuHXa9f38u96GI5Xndo/+Z1
Iq2T49l49aXq5XSZHN12OW2su4/Wy7F9okek+DptkCNBcsTW4j0tisa8/uEV
fRunsX80VPttVgztRUui0alCN2T8GNo2GuNLu1x1ldGIhon3JE+/dFoaDZ91
TuVRa2hZNFwWtpicfpiWR+Nan82H5t+mhWi8jm/UNv8TnRuNFXL7kC0t0tk/
Gvfb/1W8ry9dHI390fWqTjrTumj0SFpncTWQLouGVb8G4x5k0/ponM8dJnuz
gTZEo2aTg7z6GC2KwUn/FvF1HtDiGHS+tTOyRQ0tiYH4k7l3R9MM9o/BmuPT
YWlHIwZH7L3MB0+hpTGI9LN55RhGy2rnw25unaKh5bX7p0Z7z9pCCzFoVSOY
hJymc2NwsySuMO4prY2B2THViKxfdHHt8+4sOLuofSb7x+Dq/ENYM4Qui4Gj
++3irTNofQw6tPzXdL+cNsRg5sGOEScX0aJY/HIed6R0By2ORcPLMd/vXaAl
sYiz39zv5UvaNhY9Lr+3+iYS2D8WusjGQzNa0tJYiJtYOta3oGWxaF3gPGa+
NS2PxfkeYaPEw2khFv03Lxm8cgKdG4vxHQ717ORJa2Nhqn7SclMQXRyLZZUm
1b3jaV0szo0dfHOXgi6LxY4V/jsG5tH6WDg+XpZ2REsbYrGg43nnUXtoURw0
0h8tzh2nxXH4K832+sQrtCQOHb9Onlf2gLaNQ5eFQxzc3xr7x+HFqMrKhzXG
/nEIEYfm+TbMYv847Pxv38A3prQ8DsWNLl4L704LcYjrX+j/2Y7OjcO36Bmf
E0Fr4zDi5qWU/6bQxXEYNbXpf9netC4O9d62SzYJp8vioN7w8cOiFFofh8sx
eT5t5tGGOFz1E13MX0WL4rE0amhfi620OB6mqx00fx+gJfHweNrsqeUZ2jYe
XqO32ey+QSMenU83Sxmop6Xx2ODjcKLkg7F/PJ63G/rL4T9j/3i8qvoz8EzT
bPaPxzb90kDnDnRuPKwMH3KvWtLaeHQZY35o+l90cTy0C03v3BtH6+JxyflF
1WxXuiweexdki5770fp4xIQamgVH04Z49PjXqs37TFqUgCfjbNtEL6bFCfgn
/HezfwtoSQJuZCwTpRbRtgkYlltV9ecIjQS0ONjkTs5FWpqAwDpvDza+R8sS
4DlPlbv4FS1PgMj3WUCbamP/BMQV1AzIr6tg/wRcnXrhR6dWtDYBPZZMObax
C12cgNzIBYm9+tO6BFjXTbMuGkGX1T6Pj8VDGxdan4CpK+WKAzNpQwJMTsp7
Dg2hRYmY9r7TqeMJtDgRYwbEuo9W0pJE/Ls5+tX5ZbRtIrI9zSJdNtFIRB3f
OYbrxbQ0EfNvTgx3PUnLEjH41N1n5VdpeSI6OdaZ5v2IFhLhEXTxyLNKY/9E
/DfWqlPQd2P/RPT51COpslEO+yfiU8ahq5FmtC4RUXUfd/rSgy5LxNElKwMT
B9L6RLwf9mzbT0fakIjO5v+8yJTSoiQEDu/Wvv4cWpyERyWmzpoIWpKEgs25
8mZptG0SjrVenpc7n0YS3Np13m26mpYmIfN8nzP522hZElwHldzodIiWJ6Ey
7vx97VlaSMKsgukPe9yic5OgO+F1t/AZrU2CreHRZWuDsX8Szoy9V1L829g/
CcvLxmsHNVeyfxKObLPOKulI65Mw6Yli1ggr2pCEAI2Ljc6eFiWj49GsX2PG
0+JkaNQ9zlxwoyXJOFt/gMIlgLZNRsW4whHXY2gko9kc5cfpWbQ0Gc4BF9be
XULLknEwNNzRaz0tT0aYIkb/eCctJENx7l6S7z90bjLajl3T5NUlWpuMIVUn
V4SU08XJSLVs0/H9a1qXjIKshmujvhr7J2Oz8p+2X+qp2L92fmrGgoTWtCEZ
uacNP79LaFEKNG0PBKfb0OIULBl/8ppoJC1JwZ5XA+1yJtG2KficNnBJo1k0
UuC35mnF/FBamoLGpTNHtkiiZbXfX3tmyVIVLU9BrzUjH5uuoIXa35/+vlf+
33RuCvKnfwjvuI/WpuB4lzl71uvo4hS0C+pS1fU6rUvBu8rEnlse02UpeNxk
qqfle2P/FCzstkBZ9MPYPwVrF7fe1b+xmv1TsbOo9NredrQ4FbK7BZWDetGS
VHiFhYtKBtG2qRh2QSIePoZGKv520rY/MY2WpmKI041OjjJalooV3da0PxtJ
y1PhZ/+s5fh0WkjFyJcL/1xaQOem4kq2omLSGlqbiqRGOy9fL6SLU9En1Wrr
9MO0LhUY2C71zjm6LBU3bwVM8LxN61NRI2rY6uFz2pCKsz5VN7w/GfunQbq0
+UL9H2P/NBSPmDnKv4WG/dPws/6Zd6860bZpcF7ssDSkL400FKX9Y/NuKC1N
g0OczYUIZ1qWhtbtF3oY3Gl5GtDyrD4mkBbS8PTHJb+vsXRuGhoIuY8Ts2lt
GrqnNJn2I5cuTkPYpTXH0zbQujRsv7Wp+59ddFka0m/1U2Qdo/VpUNUb/6he
KW1Ig//67/1V92lROvY9kaaaVNDidJj+8Tg1/19j/3T0HtahTvMG89g/HfMv
bxq2pA2NdDyu/BXRqhstTceJOwPXLrOlZem4em766bajaHk6tn8NeLFqMi2k
w7Ah/nf72XRuOsb8WdKmYC6tTQemnOxmkUwX1z5f8ve+WjWtS4fH/r423VbS
Zeko/elmvXkzrU+HfHpS9177aUM6xh7OMy08RYsyMNFqy58+ZbQ4A0LRnpdF
T2hJBl4P23emX5WxfwbSy3cW7Plp7J+BcTkbouyazGf/DDiMnD9ivzkty0BQ
w4h6g3vT8gycfDT+7KHBtJAB51MdMu3H0rkZOJd+feDR6bQ2A10D8Xy4L12c
gU3l4fOPR9G62v1yV+tRGXRZBtoEfLugW0jrM1A/zcN79FrakIEOkpj3Z7bT
oky4S53jx5XQ4kwcavag5vx5WpIJB7fecc53aNtMVPSxrbz0gkYmSuZXz3T5
bOyfid2JcWeuiBawfyYuG/b0mtKSlmeimXKL4npnWsjEkvBpD6TWdG4mYuP2
W90cRmszcbigNG7GBLo4E7NerS657UHrMiGbYvGvWxBdlolz9zz73Yuj9ZlY
kDXBx1NBGzKxz8Wgub+UFgmwHzJ5l5eWNhEgcZSVPtxNiwWEhPd5Mfs4bS5A
XFJY/biUlgho3+PJH58HtKWALm1L6+sraFsBZ4bE1/Otoe0FPG33+OezBgv5
/gTk7qj7wc+UdhZQrX91/0U3Wiqg9y7VyQA72lOAU51X61+NomUC5NdFSUFT
6BABpxo/mPhmNi0X4LZJ3i4kjE4S4LLg7OOKZFoQcPLQnXWhGloj4JrZZo/K
lXSugJXrbJqGbaHzBQxySCp5t5/WCjj7Jn1O+Gm6UEDAEoiqyuhiAXa9dGsi
ntIlAias/9X/QxWtE3Dx7ddjkb/oiwJKfxSN/dhkEe9Z2++Mxfmo9nS5gFuD
pzgaetN6Aa3HDjskH0JXCJiof97j01jaICD/1/hF0TPobwI6LAj9+MmXFmXh
Xfp4lxg5bZIFqwvPtJ8zaHEWqj3tDTGLaPMsBPZ0GfplLS3JQoFFh7TYHbRl
Fg4M2VLypYS2zULpnPcfYi/Q9ln4veCjRfUdGlkI27XbOe4l7ZyF/of6hFd/
pqVZCMiXzYurs5j3z4K10wxtdUtaloWNe+vsjbOgQ7Lw7ErYP9XWtDwLjecv
PRk3nE7KwpCHMcerJ9BCFlT7Wh6M86Q1WWhbN2RrdRCdmwXRsdSlcfF0fhaC
bk5MqFbQ2iysmHDLNS6PLsxCw3at+lVr6eLavJv1/sTuoUuysKxf0eUvx2ld
FhY9bJgbe4W+WDtfbDb1ywO6LAum3+83in1Ll2ch86r06OcaWp+FMSdSgmIa
LuH9s1CW7tHssyltqH2+E6+LorvT37JQd6DluE92tCgbOYs6lstBm2RjkaAL
MEyhxdmYf8LsXZQ3bZ6Nd987h30MoyXZ6PLqzsvIFNoyGysHjPT8oKFts3Fi
ufu5iFW0fTYanbCwrtpCIxvPZCsXhh+gnbNx1Ob463enaWk26jzOGxZ2g/bM
Rq+O7TSVT2lZNvILJlwP/UCHZON8Gyvx21+0PBu57Wf3PNAgl/ev7XM3+eSX
ZrSQjcYdIt0HmtKabIw7bl8Z05HOzUb86vsp+7rR+dkoU0tNPvehtdlY4rsu
z86OLszG2z8n20fb08XZMBtRsq54FF2SjckflRYGJ1qXjXOfLQtsptAXs3G4
y0azKDe6LBteUz8s2j2bLs/Gay9x3Q/+tD4bSzs2iu0XRldkY8Xcm/rwGNqQ
DcuuMS47k+lv2cg2f73vnUCLFHjYp3+7vhraRIGw/hOT5i6hxQos+DP07vaV
tLkC36f+sX27jpYoYHZ1rcZyC22pwK6Elo+Dd9K2tfuTvPpv20/bK5A6JS3t
9VEaCoxPi7/Q8zTtrMDxO+NaBl6ipQps86qasbmM9lTgRpPwFS/u0TIFGr0+
davbUzpEgTbvP7Twe03LFTjd6YvTxirj/RXQJ15L1Vcb76/AkP+EXV1+Ge+v
QN7OJo986i3l/RU4qQxrtL4Jna+ARvO3zeNWtFaBIwf2uXZqTxcqYNFkdcIs
CV2sQJbGfcWa3nSJAnts3hXf70/rFIj9437JfAh9UYH8mtVPPBzoMgXetTtg
WDmWLq99XtmWP3dcaL0C48oimradQVco8DK4uamrF21Q4GmvnPbLfOlvCoia
3+x4M4QW5cC0Q02HVnLaJAevJn8xkybS4hyg8HzLJRm0eQ4+WUY3uKakJTk4
df1zTbNFtGUOMgpc3rgsp21z8GVx6q35a2n7HLzbmn3s0iYaObB7KdtksoN2
zkGek5ly/F5amoPyq5sCVCW0Zw5uJDd0PHeSluXAaaJjh/oX6JAc1Bs1wzD6
Gi3PwR2PEWey7tBJOVAt/5Wne0QLOXhevWzOnxe0JgdXVtbtM/Kd8f45OLTR
5WPaZ+P9c6BZKd/3z3fj/XPwcEV0zA9RHu9f+zy6KTZDTejiHPgNMXmb2JIu
ycFF8/UbDpnRuhyINeIZXzvTF3Nwa/OceoN60mU5KFyyoDjGmi7PgWXocq+9
A2l9DqqmpdQxDKMrcrBorsOW/qNpQw423Xo8LmIC/S0HZ3fNelEkpUVKLGx/
OL3SgzZRIu8vg2mfObRYiQjLRtuDg2hzJUqa/Rq6NYKWKNGkwfULL+NoSyV+
2QnTu6fRtkr0PNDyga+Ctleiy850H+18GkpkD7v89MlS2lmJN5lfvTuvpqVK
vCr4Uz5LS3sqYbavQrpmGy1TopW++Fz5bjpEiajxnn+1O0TLlbhk8nSL23E6
SYnDY8e1Wn6WFpS40XFB8s1SWqNE8e7iJ+JbdK4S7zsfwtQHdL4SFvPXblj0
jNYq8bSN78/SCuP9lTj/sKFrE4Px/kqE1V203bnGeH8lQgu//FT9Nt5fCfcP
w1zONVjG+ytRWu23ql5zukwJ30dhekdTulyJvefcegkdab0S029IQk90oyuU
eNzlauGvPrRBicobXq+G2dHflGhjctki2Z4WqfDheQe3w6NoExXMFJM1X51o
sQrdGvuVDJxCm6uwY4Xnq2g3WqLC+Al2LYtn05Yq5I19P/iDP22rQvfCeTOt
w2h7FZYtb5wyN4aGCslW4asKk2lnFSLn7937WqClKjS9c/9iDw3tqUKF1atH
fktomQrrd96q0q6kQ1Q4m7Ll55N1tFyFrwe9GnbeQiepcD7jS/NZO2lBhVtf
o1qv3k9rVNg7vKzNvaN0rgo/5aat256m81WYcGhE8xmXaK0KA60nNFhaRheq
MO3L0B/X7tHFKoywbvm+2VO6RIWFNRcfTHxN61R4EB98XlNlvL8KXQsrd5+v
Nt6/9n29dlpe/5fx/ir42cUljK63nPdXoW+XGDehCV2hwmIn2J1oRRtUsBr5
pPEvc/qbCusKXJ4OldAiNZTf1HsTe9MmamRX5AkH+9NiNQbUC5/0ZTBtrsag
p63b2jnQEjV6tVE/iBxLW6pROPhiwU4X2lYNj8d3ZlVOp+3VuKXd087Si4Ya
R83cygJ9aWc1iu6cU/4dQkvVGBtXx/5ZFO2pRs95jd5YJNIyNd7tuJc3O4MO
UWOIPHr4GiUtV2NL1G39vYV0khp3RokUbZfTghpBidVdZ6ylNWr8u7P4eO4m
Orc2L3GQ+7XtdL4aueGZ75rupbVq3O2+NH1CCV2oxsqBoc3UJ+liNaIGNMo/
e54uUePPobmSutdonRqvPZZtGXWHvqiGrkjonf6ILlPDZsKArUdf0OVqXD+/
reu3SuP91XD8R7968Gfj/dXoevxRi9jvxvurIfZfKxSLVvD+te93TKePVY1o
kQZ5X328+rakTTQIaOl/OsSMFmtwordl762daXMNRt3ZpXnRg5ZooN795bXE
mrbUYODE744+A2lbDV6MPLF67TDaXoPB3Ud/KHekocHFRTmjzCbQzhoMb6tc
NENKSzWwlo4pz/WgPTUYeudEl2s+tEyDesNr/JsG0SEa9DJ/v9k5gpZrMKbe
uufKODpJg5q8xp3PpNKCBs+97VxFClqjwcYfbTQO8+lcDW7/KS5JWUrna9Ch
vsnrw/m0VgPxenPx1w10oQbuAc+HDNhGF2uwoCrAK2o3XaLBpLINKTsP0joN
hv2dt+rtMfqiBp9+jdjb6yxdpkHruPUX/Evp8tr3s+HQA+1NWq9Bk7bKysf3
6QoNLMIb13R4Rhs0MBs+RuRZYby/BrnmAxqu+Gi8/zxYr71jcvNf4/3nQT2z
n0nL3ytG/R+PSjFc
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", "\"MP:M3P5-8\"", "}"}], TraditionalForm], 
     PlotRange -> {{0, 801.}, {0, 1.4015780150138801`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"6nM ML\"", "\"4nM ML\"", "\"2nM ML\"", "\"1nM ML\"", "\"0nM ML\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.887018602720584*^9, 3.8870186822620707`*^9, 
  3.8870187696417313`*^9, 3.88701882591938*^9, 3.8870189007454386`*^9, 
  3.887018963539443*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"1127eef0-fce1-4ffe-878f-20fed3b5d87c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw12HlYzOv7B/CxJYQ5liRk7KHjDEIkbntEphSVTk1JpXXa0/opbWSZIt9k
ORMhhClJjm0QUpYJkWxjq0Qae0J+z+86749/XK/zfu77fu7Pc12uOkPcA21X
txcIBEM6CAT///d/f7Qz//tbRPgPlJve6+2Wi4NhXTJ48uPLpCTeQnqz5NbB
ugW8+9Bsk3mp2/V4G1DN+2mSaXeM4IG08Zu94bVs3iJ6ddsqZIKU91Aa1Pl3
YLAx7+Fk8yj7ZOyHQfBI8hg6OM7qDG9jquj5+393k3mPoV7vyt172PA2IdlX
0+ufB/IeR7/nV0zn3gyExfSkde/hwyW8x5OJ9afQgCTeE2jiuu0+V215T6TP
i5dcODqEtykVPtG0F30YAE+iuUKT/v0v8p5Mx8bfmZCVwXsKfTWwuyp3521G
i5fabdA15T2VStfnBX7vxHsaGb4fnSOtMYTN6eLOb87mR3hPpzVC/Smpcbwt
yKtw881ZtrxnUEK/gnrvkbxnkqvRJb/W1v4w0c8ehm6fb8Mc0eoF01/Y7efz
WWQsejrcMJrPZ1H8naiQ2TZ8Ppt0266MvTGKz2eTybwzZ0+2GSCfQ2PVVvt/
VcPcHIpSuIXsPcrnc6lo6NRLe5P5fC5VrZ0w9dfffD6PRL900pWT+XweOZv3
CzvTk8/n05Pe+ecHvumHfD6J/1405e4lWLCA6v3vnHqyi88X0OkwT5F5BJ9b
km1TvEOjDZ9bUvFw3aWNJny+kIbaVrRM1eXzhTRbZGxT81If+SL687CTY9kF
mFtEn7j9/X7t5HMr2tP5RHZCJJ9b0c3vx95J7Pl8MTXEzBnjM4HPF9O40jG+
N3ry+RIyz9O/Hd7UF/kSWmyyJdK7EhZYU4/2eVsUh/jcmo496jLTKI3Pl9L7
qL0lGk8+X0oXul83rp/H5xIqGF94QzwCJgk1Xmp4dLYjf15C8geR2za86vOf
VRL6uuHK5B1lsMCG6jn7zg15MNnQkrvfF4cnw5wNRU51tZ3jydfbUOGZMA/r
BXy9Lakszt3dbszX21Jg1M+PA7ry9baU+Mjc4Mnb3qi3paRZ1Tsf3oQFy8ht
U/eHQiVMyyhSlvhnYibMLSPzzb++m4Tx9ctokDZSIXTg6+0oiF6nmJjz9Xbk
+knahzPi6+3o8bL7RV3b8/V2pO9acavydS/U25ObyefqS9dhsiezuKypzUdh
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
+Vi7G09vzvw/6Gymqg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yINv9c8m/x9RrTCh
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw12mlYzO3fBvDJkoSEkH1kKd2WkCSpU4uiZCJJimlftEz7XrM1DUJIsieh
SHdkidBIkv4hW7KHEIpuS0LyzHP4Xt50fFxzzvk7f5cXvTDWM3SpTzcOhzO2
O4fz/z///mkz//uTC/oLvNeLVoz9MIasBpvz32zF9cyaqJQeGz6yglkLHdON
nd4fZ9bG5zMeOc07mUfixv2zeoNkzFw0D3sh8w1n1oHjkp2lz1czj0fM/8Ra
iXbME3E8txVzjJn1EHLgqd7gCcz6iLF/9K3fQObJMCj62kvnz2jyVHBHhH5a
0sJsgG3zhvtlPWSeDhM98yVfq5hnoP/y+/n+p5hnothcb9vnA8yGaLKvsdqy
mXkWikb/6GuVxGwE46bQxeprmWfD2LBX3CsXZmNsnfNh4K0FzHPQ+SHyaK0h
swl+ZOo9fqzDPBcztg2y69RkNsXWrevyp/wZRZ6Hbc9WHQ1tZTbD6u3jNCoe
M5tj/fJxO8bXMAMtJpkaO0rJQiBHVjB/2BF2Ph/ebZO7HdvOzudjoKH5BHsp
O7fAhBHDJZ3h7NwC+s7t7WUe7NwSDWPGr17PY+eW2LTNM9vPnJ1bQRo8Km3Z
VHZuhYz2iH4Oo9i5NRrC1DVX9GXn1mjTyI8M+TWSzhdAYztfJ/M9WbgA2DtR
pfohO7dBoc/zH72vs3MbnC8zb19Zys5tET79QOPZI+zcFpxtGnnjdrDzhXjW
W3PyXhk7XwjTHle8x0ez80U49z7P5JwPO1+EEVUndq1azs7t0CNrengfa3Zu
h2t694uqDdm5PZ7mrDfbNp6d26MmYFf/tVrsfDEcw1I0eT3Y+WIUvOhmYPF1
BJ07oDhK231+E1noACvdDtnie+x8CVxju/b4VrLzJRijeXVT+il2zoNGUQ/7
8jwyeHh949/Krkz2eR4WrbjTvCiVrFB+3vBo/sEolndEtzE7vqr5srwjeEuG
XYx3ZnlH1B599LljAcs7QnFot0wym+WX4s3gRQHD9Vh+KRQdTRsuarP8UvTY
m/08qDfLL8XTJznL9X4Op/wy6Pl6Pf/0noxliFvhHnLlMVm4DCkZ3K+5tWTF
MhTFBHpuusjyTogOVTmWWsTyTljVdqdcvp/lnaBW0rR1RwbLO8Fvtf2QkyKW
X45dBQtNG8JZfjnCV0z43tub5Zfjgf7COTbLWX45TrnN+bZ5Acs7Y+4U8aim
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fTVsplw0drTsg/8DiF7vKA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1TtsPEcdwPERNFdeQeECKRuE0AkhtLyPZwYIYN5LeJlHYPJP/uESSLJJ
SHJ5AMPbdFu63NLlli6ndLmlyyldbukOBLGE9nPN6ePv/GZ27mz50QcvPfHw
PSGER98bwn/f330tj7373sT7H8S1N3iL34dP8Pux7x/AH8Qfwjv8YfwR/FHc
4o/hj+NP4E/iT+FP48/gPf4s/hz+PP4C/iL+En4s/vt/r0fuHdc94/BlOg5f
oePwVToOj9Nx+Bodh6/TcfgGHYdTOg7fpOPwLToO36bj8B06Dt+l4/A9Og7f
p+PQrR1xxgWHHzCPMy44PME8zrjg8EPmccYFhx8xjzMuOPyYeZxxweEnzOOM
Cw4/ZR5nXHA4Yx5nXHD4GfM444LDz5nHGRccfsE8zrjg8EvmccYFhyeZxxkX
HH7FPM644PBr5nHGBYe0doMjTjin9f+TERfWVxye4vyn1vMRJ5yZH+mFXnF4
wPk44oTzA+6PC+srPTy9dvM05+PE+kwf6YVecXiG++OIE87PcH96wZX14SHn
P+T7xwlnPOKCKw7P8vnj+Cz3xxmPzBdccfgN5+OIE854xAVXHA6cj+OB+9Mz
fcSF9RWH59brm+c4n57omT7SC73Sw/Oc/zzn44QzHnHBFYff8vnjiBPOeMQF
Vxx+x/k44oQzHnHBFYcXOB9HnHDGIy644vAi5+OIE854xAVXHF7ifBxxwhmP
uOCKQ7/2Fje4xRF3OOEeZzzgsb9/zvu/z4le8Mz6Sl/o4WXuj5uX1+tbHHGH
E+7ZP+MBj3jChf1nXFm/4PAK939lPd/QWxxxx3yi9zjjAY94wgXPnF/pCz28
yv1x8+p6fUuP9I6ecI8zHvCIJ1zwjCtecPg998cNbnHEHU64xxkPeMQTLnjG
FS84vMb9cYNbHHGHE+5xfu3+Oe5/fwY84gkX9pvplb7Qw+vc//V1b+gtPdI7
nHCPMx7wyHkTvdBnesULDm9wf9zgFkfc4fTG+vl6esYDHpmf6AXPrK/0BYcj
98cNbo/r/SO9wwn3OOOB/Uc8sb7gmfWVvuDwJvfHDW5xxB1Ob66fp6dnPOCR
+Yle8Mz6Sl9weIv74+at9X4tPeIOJ9yzX8YDHvGEC/vPuOKF+fD22tu3uT9u
WR9xhxPu2S/TB/pIn3DBM/OVvtDDO3z/76zXN7hlfaR3OOEeZzzgEU+44BlX
vODwh7W3uMEtjrjDCfc44wGPeMIFz7jiBYc/rr3FDW5xxB1OuMcZD3jEEy54
xhUvOPxp7S1ucIsj7nDCPc54wCOecMEzrnjBIa+9wVt8ghu8wy3e44hPcYfP
cMIH3OMjzvgcD/gCj/gST/gKF3yNZ3yDK77FC77D4c9rb/AWn+AG73CL9zji
U9zhM5zwAff4iDM+xwO+wCO+xBO+wgVf4xnf4Ipv8YLvcPjL2hu8xSe4wTvc
4j2O+BR3+AwnfMA9PuKMz/GAL/CIL/GEr3DB13jGN7jiW7zgOxz+uvYGb/EJ
bvAOt3iPIz7FHT7DCR9wj48443M84As84ks84Stc8DWe8Q2u+BYv+A6Hv629
wVt8ghu8wy3e44hPcYfPcMIH3OMjzvgcD/gCj/gST/gKF3yNZ3yDK77FC77D
4e9rb/AWn+AG73CL9zjiU9zhM5zwAff4iDM+xwO+wCO+xBO+wgVf4xnf4Ipv
8YLvcPjH2hu8xSe4wTvc4j2O+BR3+AwnfMA9PuKMz/GAL/CIL/GEr3DB13jG
N7jiW7zgOxz+ufYGb/EJbvAOt3iPIz7FHT7DCR9wj48443M84As84ks84Stc
8DWe8Q2u+BYv+A6H87U3eItPcIN3uMV7HPEp7vAZTviAe3zEGZ/jAV/gEV/i
CV/hgq/xjG9wxbd4wXc4/Gvtzf/9H/jYIdk=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", "\"ML:M3P5-8\"", "}"}], TraditionalForm], 
     PlotRange -> {{0, 801.}, {0, 8.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"6nM ML\"", "\"4nM ML\"", "\"2nM ML\"", "\"1nM ML\"", "\"0nM ML\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.887018602720584*^9, 3.8870186822620707`*^9, 
  3.8870187696417313`*^9, 3.88701882591938*^9, 3.8870189007454386`*^9, 
  3.8870189636504126`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"51b73b66-8f5a-4d6f-9cf7-7964290ada98"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 981},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.1 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"686203ee-3945-425e-a59b-0237fff4e1b4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 753, 21, 94, "Input",ExpressionUUID->"a3b672ec-a8b3-40b3-b999-1b931a40fd21"],
Cell[CellGroupData[{
Cell[1336, 45, 43766, 854, 2302, "Input",ExpressionUUID->"4fc2e6ac-731b-413b-9eae-1badfac266b7"],
Cell[CellGroupData[{
Cell[45127, 903, 75602, 1354, 281, "Print",ExpressionUUID->"da21499c-73aa-4814-b901-1a8980a43d4c"],
Cell[120732, 2259, 67416, 1219, 271, "Print",ExpressionUUID->"0c77f0da-6c59-4a4f-b9f7-a5448825cd15"],
Cell[188151, 3480, 75846, 1356, 275, "Print",ExpressionUUID->"1127eef0-fce1-4ffe-878f-20fed3b5d87c"],
Cell[264000, 4838, 66881, 1210, 281, "Print",ExpressionUUID->"51b73b66-8f5a-4d6f-9cf7-7964290ada98"]
}, Open  ]]
}, Open  ]]
}
]
*)

